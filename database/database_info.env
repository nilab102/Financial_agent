# DATABASE STRUCTURE INFORMATION
# Format: TABLE_NAME={table_definition_json}
# This file contains detailed information about all database tables, their columns, relationships, and usage
# --- VERSION 3: Includes Inventory and Payroll Modules ---

# --- Core Accounting ---
ACCOUNT_CATEGORIES={
    "table_name": "AccountCategories",
    "description": "Categorizes accounts for reporting purposes",
    "purpose": "Categorizes accounts for reporting purposes",
    "columns": [
        {"name": "CategoryID", "type": "INTEGER", "description": "Primary key identifier for each category", "is_primary": true, "is_foreign": false, "is_required": true},
        {"name": "CategoryName", "type": "TEXT", "description": "Category name: Assets,Liabilities,Equity,Revenue,Expenses,Current Assets,Fixed Assets,Current Liabilities,Long-term Liabilities,Operating Expenses", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "CategoryType", "type": "TEXT", "description": "Account type: Balance Sheet, Income Statement", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "ParentCategoryID", "type": "INTEGER", "description": "Self-reference for hierarchical category structure", "is_primary": false, "is_foreign": true, "references": "AccountCategories.CategoryID", "is_required": false},
        {"name": "Description", "type": "TEXT", "description": "Category description", "is_primary": false, "is_foreign": false, "is_required": false}
    ],
    "relationships": [
        {"related_table": "AccountCategories", "type": "self_referential", "via_column": "ParentCategoryID", "description": "Categories can have parent categories forming a hierarchy"},
        {"related_table": "ChartOfAccounts", "type": "one_to_many", "via_column": "CategoryID", "via_related": "CategoryID", "description": "Categories contain multiple accounts"}
    ],
    "common_queries": [
        "SELECT * FROM AccountCategories WHERE CategoryType = 'Asset' ORDER BY CategoryName;",
        "SELECT c.CategoryName AS Category, p.CategoryName AS ParentCategory FROM AccountCategories c LEFT JOIN AccountCategories p ON c.ParentCategoryID = p.CategoryID;",
        "SELECT CategoryType, COUNT(*) AS CategoryCount FROM AccountCategories GROUP BY CategoryType;"
    ]
}

CHART_OF_ACCOUNTS={
    "table_name": "ChartOfAccounts",
    "description": "Defines financial accounts used for bookkeeping",
    "purpose": "Core financial structure for double-entry accounting",
    "columns": [
        {"name": "AccountID", "type": "INTEGER", "description": "Primary key identifier for each account", "is_primary": true, "is_foreign": false, "is_required": true},
        {"name": "AccountNumber", "type": "TEXT", "description": "Unique account number", "is_primary": false, "is_foreign": false, "is_required": true, "is_unique": true},
        {"name": "AccountName", "type": "TEXT", "description": "Account name", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "AccountType", "type": "TEXT", "description": "Account type: Asset, Liability, Equity, Revenue, Expense", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "CategoryID", "type": "INTEGER", "description": "Foreign key to AccountCategories table", "is_primary": false, "is_foreign": true, "references": "AccountCategories.CategoryID", "is_required": true},
        {"name": "IsActive", "type": "INTEGER", "description": "Whether account is active (1) or inactive (0)", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "OpeningBalance", "type": "REAL", "description": "Starting balance for the account", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "CurrentBalance", "type": "REAL", "description": "Current balance (should reflect sum of GL entries + opening balance)", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "Description", "type": "TEXT", "description": "Account description", "is_primary": false, "is_foreign": false, "is_required": false},
        {"name": "Created", "type": "TEXT", "description": "When account was created in ISO date format", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "LastUpdated", "type": "TEXT", "description": "When account was last updated in ISO date format", "is_primary": false, "is_foreign": false, "is_required": true}
    ],
    "relationships": [
        {"related_table": "AccountCategories", "type": "many_to_one", "via_column": "CategoryID", "description": "Each account belongs to exactly one Category"},
        {"related_table": "GeneralLedger", "type": "one_to_many", "via_column": "AccountID", "via_related": "AccountID", "description": "Accounts are referenced in General Ledger entries"},
        {"related_table": "InvoiceItems", "type": "one_to_many", "via_column": "AccountID", "via_related": "AccountID", "description": "Accounts are used for invoice revenue recording"},
        {"related_table": "BillItems", "type": "one_to_many", "via_column": "AccountID", "via_related": "AccountID", "description": "Accounts are used for bill expense recording"},
        {"related_table": "BudgetItems", "type": "one_to_many", "via_column": "AccountID", "via_related": "AccountID", "description": "Accounts are budgeted in budget items"},
        {"related_table": "CashTransactions", "type": "one_to_many", "via_column": "AccountID", "via_related": "RelatedAccountID", "description": "Accounts are linked to cash transactions"},
        {"related_table": "FixedAssets", "type": "one_to_many", "via_column": "AccountID", "via_related": "AssetAccountID", "description": "Asset accounts used in FixedAssets"},
        {"related_table": "FixedAssets", "type": "one_to_many", "via_column": "AccountID", "via_related": "AccumDeprAccountID", "description": "Accumulated Depreciation accounts used in FixedAssets"},
        {"related_table": "FixedAssets", "type": "one_to_many", "via_column": "AccountID", "via_related": "DeprExpenseAccountID", "description": "Depreciation Expense accounts used in FixedAssets"},
        {"related_table": "RecurringTransactions", "type": "one_to_many", "via_column": "AccountID", "via_related": "AccountID", "description": "Recurring transactions are associated with accounts"},
        {"related_table": "ExpenseItems", "type": "one_to_many", "via_column": "AccountID", "via_related": "AccountID", "description": "Expense items are associated with accounts"},
        {"related_table": "InventoryItems", "type": "one_to_many", "via_column": "AccountID", "via_related": "InventoryAssetAccountID", "description": "Inventory Asset accounts used in InventoryItems"},
        {"related_table": "InventoryItems", "type": "one_to_many", "via_column": "AccountID", "via_related": "COGSAccountID", "description": "COGS accounts used in InventoryItems"},
        {"related_table": "EmployeesPayrollInfo", "type": "one_to_many", "via_column": "AccountID", "via_related": "DefaultSalaryExpenseAccountID", "description": "Default Salary Expense accounts used in EmployeesPayrollInfo"},
        {"related_table": "PayrollDeductionTypes", "type": "one_to_many", "via_column": "AccountID", "via_related": "LiabilityAccountID", "description": "Liability accounts used in PayrollDeductionTypes"},
        {"related_table": "PayrollDeductionTypes", "type": "one_to_many", "via_column": "AccountID", "via_related": "ExpenseAccountID", "description": "Expense accounts used in PayrollDeductionTypes"}
    ],
    "common_queries": [
        "SELECT * FROM ChartOfAccounts WHERE IsActive = 1 ORDER BY AccountNumber;",
        "SELECT c.AccountNumber, c.AccountName, ac.CategoryName FROM ChartOfAccounts c JOIN AccountCategories ac ON c.CategoryID = ac.CategoryID ORDER BY c.AccountNumber;",
        "SELECT a.AccountType, SUM(a.CurrentBalance) AS TotalBalance FROM ChartOfAccounts a WHERE a.IsActive = 1 GROUP BY a.AccountType;"
    ]
}

FISCAL_YEARS={
    "table_name": "FiscalYears",
    "description": "Defines financial years",
    "purpose": "Financial period management and reporting",
    "columns": [
        {"name": "FiscalYearID", "type": "INTEGER", "description": "Primary key identifier for each fiscal year.", "is_primary": true, "is_foreign": false, "is_required": true},
        {"name": "YearName", "type": "TEXT", "description": "Name of fiscal year.Naming Convention is FY(Space)Year(e.g., FY 1998, FY 2020)", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "StartDate", "type": "TEXT", "description": "Start date of fiscal year in ISO date format", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "EndDate", "type": "TEXT", "description": "End date of fiscal year in ISO date format", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "IsCurrent", "type": "INTEGER", "description": "Whether this is the current fiscal year (1) or not (0)", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "Status", "type": "TEXT", "description": "Open, Closed, or Archived", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "Notes", "type": "TEXT", "description": "Additional information", "is_primary": false, "is_foreign": false, "is_required": false}
    ],
    "relationships": [
        {"related_table": "FiscalPeriods", "type": "one_to_many", "via_column": "FiscalYearID", "via_related": "FiscalYearID", "description": "Fiscal years contain multiple fiscal periods"},
        {"related_table": "Budgets", "type": "one_to_many", "via_column": "FiscalYearID", "via_related": "FiscalYearID", "description": "Budgets are created for fiscal years"},
        {"related_table": "FinancialReports", "type": "one_to_many", "via_column": "FiscalYearID", "via_related": "FiscalYearID", "description": "Financial reports are generated for fiscal years"}
    ],
    "common_queries": [
        "SELECT * FROM FiscalYears WHERE IsCurrent = 1;",
        "SELECT * FROM FiscalYears ORDER BY StartDate DESC;",
        "SELECT FiscalYears.YearName, COUNT(FiscalPeriods.PeriodID) AS PeriodCount FROM FiscalYears LEFT JOIN FiscalPeriods ON FiscalYears.FiscalYearID = FiscalPeriods.FiscalYearID GROUP BY FiscalYears.FiscalYearID;"
    ]
}

FISCAL_PERIODS={
    "table_name": "FiscalPeriods",
    "description": "Defines accounting periods within fiscal years",
    "purpose": "Periodic financial closing and reporting",
    "columns": [
        {"name": "PeriodID", "type": "INTEGER", "description": "Primary key identifier for each period", "is_primary": true, "is_foreign": false, "is_required": true},
        {"name": "FiscalYearID", "type": "INTEGER", "description": "Foreign key to FiscalYears table", "is_primary": false, "is_foreign": true, "references": "FiscalYears.FiscalYearID", "is_required": true},
        {"name": "PeriodNumber", "type": "INTEGER", "description": "Sequential period number within year", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "StartDate", "type": "TEXT", "description": "Period start date in ISO date format", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "EndDate", "type": "TEXT", "description": "Period end date in ISO date format", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "IsClosed", "type": "INTEGER", "description": "Whether period is closed (1) or open (0) for posting", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "ClosedBy", "type": "INTEGER", "description": "User who closed the period (FK to Users)", "is_primary": false, "is_foreign": true, "references": "Users.UserID", "is_required": false},
        {"name": "ClosingDate", "type": "TEXT", "description": "When period was closed in ISO date format", "is_primary": false, "is_foreign": false, "is_required": false}
    ],
    "relationships": [
        {"related_table": "FiscalYears", "type": "many_to_one", "via_column": "FiscalYearID", "description": "Each period belongs to exactly one fiscal year"},
        {"related_table": "Users", "type": "many_to_one", "via_column": "ClosedBy", "description": "A user can close a fiscal period"},
        {"related_table": "BudgetItems", "type": "one_to_many", "via_column": "PeriodID", "via_related": "PeriodID", "description": "Budget items are defined for specific periods"},
        {"related_table": "FinancialReports", "type": "one_to_many", "via_column": "PeriodID", "via_related": "PeriodID", "description": "Financial reports can be generated for specific periods"}
    ],
    "common_queries": [
        "SELECT * FROM FiscalPeriods WHERE IsClosed = 0 ORDER BY StartDate;",
        "SELECT FiscalPeriods.*, FiscalYears.YearName FROM FiscalPeriods JOIN FiscalYears ON FiscalPeriods.FiscalYearID = FiscalYears.FiscalYearID ORDER BY FiscalPeriods.StartDate;",
        "SELECT * FROM FiscalPeriods WHERE StartDate <= date('now') AND EndDate >= date('now');"
    ]
}

GENERAL_LEDGER={
    "table_name": "GeneralLedger",
    "description": "Records all financial transactions (journal entries)",
    "purpose": "Double-entry bookkeeping core, financial audit trail, and basis for financial statements",
    "columns": [
        {"name": "EntryID", "type": "INTEGER", "description": "Primary key identifier for each ledger entry line", "is_primary": true, "is_foreign": false, "is_required": true},
        {"name": "EntryDate", "type": "TEXT", "description": "Date the underlying transaction occurred in ISO date format", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "PostingDate", "type": "TEXT", "description": "Date the entry was posted to the ledger in ISO date format", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "AccountID", "type": "INTEGER", "description": "Foreign key to ChartOfAccounts table (the account being debited or credited)", "is_primary": false, "is_foreign": true, "references": "ChartOfAccounts.AccountID", "is_required": true},
        {"name": "TransactionType", "type": "TEXT", "description": "Type of originating transaction (e.g., Invoice, Bill, Payment, Payroll, Manual Journal, Depreciation, Cash Receipt, Cash Disbursement, COGS)", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "TransactionID", "type": "INTEGER", "description": "Reference ID of the source transaction (e.g., InvoiceID, BillID, PaymentID, PayrollRunID, COGSLogID etc.). Interpretation depends on TransactionType.", "is_primary": false, "is_foreign": false, "is_required": false},
        {"name": "JournalID", "type": "INTEGER", "description": "Identifier grouping related debit/credit lines for a single logical journal entry (optional, useful for manual journals)", "is_primary": false, "is_foreign": false, "is_required": false},
        {"name": "Description", "type": "TEXT", "description": "Entry description (often inherited from source transaction)", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "DebitAmount", "type": "REAL", "description": "Debit amount (use 0 if credit)", "is_primary": false, "is_foreign": false, "is_required": true, "default_value": 0},
        {"name": "CreditAmount", "type": "REAL", "description": "Credit amount (use 0 if debit)", "is_primary": false, "is_foreign": false, "is_required": true, "default_value": 0},
        {"name": "Reference", "type": "TEXT", "description": "Additional reference number or code", "is_primary": false, "is_foreign": false, "is_required": false},
        {"name": "CreatedBy", "type": "INTEGER", "description": "Foreign key to Users table", "is_primary": false, "is_foreign": true, "references": "Users.UserID", "is_required": true},
        {"name": "CreationDate", "type": "TEXT", "description": "When entry was created in ISO date format", "is_primary": false, "is_foreign": false, "is_required": true}
    ],
    "relationships": [
        {"related_table": "ChartOfAccounts", "type": "many_to_one", "via_column": "AccountID", "description": "Each entry affects exactly one account"},
        {"related_table": "Users", "type": "many_to_one", "via_column": "CreatedBy", "description": "Each entry is created by exactly one user"},
        {"related_table": "TransactionTags", "type": "one_to_many", "via_column": "EntryID", "via_related": "TransactionID", "description": "General ledger entries can have multiple tags"},
        {"related_table": "CostOfGoodsSoldLog", "type": "one_to_many", "via_column": "EntryID", "via_related": "DebitGLEntryID", "description": "Links GL entry to its COGS Log (Debit side)"},
        {"related_table": "CostOfGoodsSoldLog", "type": "one_to_many", "via_column": "EntryID", "via_related": "CreditGLEntryID", "description": "Links GL entry to its COGS Log (Credit side)"}
        // Note: Polymorphic link via TransactionID/TransactionType to source tables like Invoices, Bills, etc.
    ],
    "common_queries": [
        "SELECT * FROM GeneralLedger WHERE PostingDate >= date('now', '-30 days') ORDER BY PostingDate DESC, EntryID;",
        "SELECT gl.*, coa.AccountNumber, coa.AccountName FROM GeneralLedger gl JOIN ChartOfAccounts coa ON gl.AccountID = coa.AccountID WHERE gl.PostingDate >= date('now', '-30 days') ORDER BY gl.PostingDate DESC, gl.EntryID;",
        "SELECT gl.AccountID, coa.AccountName, SUM(gl.DebitAmount) AS TotalDebits, SUM(gl.CreditAmount) AS TotalCredits, SUM(gl.DebitAmount - gl.CreditAmount) AS NetChange FROM GeneralLedger gl JOIN ChartOfAccounts coa ON gl.AccountID = coa.AccountID WHERE gl.PostingDate >= date('now', '-30 days') GROUP BY gl.AccountID;",
        "SELECT JournalID, SUM(DebitAmount) as TotalDebits, SUM(CreditAmount) as TotalCredits FROM GeneralLedger WHERE JournalID IS NOT NULL GROUP BY JournalID HAVING TotalDebits != TotalCredits;" # Check for unbalanced manual journals
    ]
}

# --- Organization ---
DEPARTMENTS={
    "table_name": "Departments",
    "description": "Defines organizational departments",
    "purpose": "Organizational structure and budget responsibility assignment",
    "columns": [
        {"name": "DepartmentID", "type": "INTEGER", "description": "Primary key identifier for each department", "is_primary": true, "is_foreign": false, "is_required": true},
        {"name": "DepartmentName", "type": "TEXT", "description": "Name of Departments.Here are :-Executive,Finance,Accounting,Sales,Human Resources,IT,Customer Service,Tax", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "ParentDepartmentID", "type": "INTEGER", "description": "Self-reference for hierarchical department structure", "is_primary": false, "is_foreign": true, "references": "Departments.DepartmentID", "is_required": false},
        {"name": "Description", "type": "TEXT", "description": "Department description", "is_primary": false, "is_foreign": false, "is_required": false}
    ],
    "relationships": [
        {"related_table": "Departments", "type": "self_referential", "via_column": "ParentDepartmentID", "description": "Departments can have parent departments forming a hierarchy"},
        {"related_table": "Positions", "type": "one_to_many", "via_column": "DepartmentID", "via_related": "DepartmentID", "description": "Departments contain multiple positions"},
        {"related_table": "Budgets", "type": "one_to_many", "via_column": "DepartmentID", "via_related": "DepartmentID", "description": "Departments can have associated budgets"}
    ],
    "common_queries": [
        "SELECT * FROM Departments ORDER BY DepartmentName;",
        "SELECT d.DepartmentName AS Department, p.DepartmentName AS ParentDepartment FROM Departments d LEFT JOIN Departments p ON d.ParentDepartmentID = p.DepartmentID;",
        "SELECT d.DepartmentName, COUNT(u.UserID) AS UserCount FROM Departments d LEFT JOIN Positions p ON d.DepartmentID = p.DepartmentID LEFT JOIN Users u ON p.PositionID = u.PositionID GROUP BY d.DepartmentID;"
    ]
}

POSITIONS={
    "table_name": "Positions",
    "description": "Defines job positions within the organization",
    "purpose": "Organizational structure and approval authority management",
    "columns": [
        {"name": "PositionID", "type": "INTEGER", "description": "Primary key identifier for each position", "is_primary": true, "is_foreign": false, "is_required": true},
        {"name": "PositionTitle", "type": "TEXT", "description": "Here are Position or Job tile mentioned.Like:- CEO , Manager etc", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "DepartmentID", "type": "INTEGER", "description": "Foreign key to Departments table", "is_primary": false, "is_foreign": true, "references": "Departments.DepartmentID", "is_required": true},
        {"name": "Description", "type": "TEXT", "description": "Position description", "is_primary": false, "is_foreign": false, "is_required": false},
        {"name": "IsApprover", "type": "INTEGER", "description": "Whether position can approve transactions (1) or not (0)", "is_primary": false, "is_foreign": false, "is_required": true}
    ],
    "relationships": [
        {"related_table": "Departments", "type": "many_to_one", "via_column": "DepartmentID", "description": "Each position belongs to exactly one Department"},
        {"related_table": "Users", "type": "one_to_many", "via_column": "PositionID", "via_related": "PositionID", "description": "A position can be held by multiple users"},
        {"related_table": "ApprovalSteps", "type": "one_to_many", "via_column": "PositionID", "via_related": "ApproverPositionID", "description": "Positions can be assigned approval authority in workflow steps"}
    ],
    "common_queries": [
        "SELECT * FROM Positions WHERE IsApprover = 1;",
        "SELECT Positions.PositionTitle, Departments.DepartmentName FROM Positions JOIN Departments ON Positions.DepartmentID = Departments.DepartmentID ORDER BY Departments.DepartmentName;",
        "SELECT Positions.PositionTitle, COUNT(Users.UserID) AS UserCount FROM Positions LEFT JOIN Users ON Positions.PositionID = Users.PositionID GROUP BY Positions.PositionID;"
    ]
}

USERS={
    "table_name": "Users",
    "description": "Stores information about system users including credentials and permissions",
    "purpose": "User authentication and authorization",
    "columns": [
        {"name": "UserID", "type": "INTEGER", "description": "Primary key identifier for each user", "is_primary": true, "is_foreign": false, "is_required": true},
        {"name": "Username", "type": "TEXT", "description": "Unique user login name", "is_primary": false, "is_foreign": false, "is_required": true, "is_unique": true},
        {"name": "FullName", "type": "TEXT", "description": "User's full name", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "Email", "type": "TEXT", "description": "User's email address", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "PasswordHash", "type": "TEXT", "description": "Securely hashed password", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "PositionID", "type": "INTEGER", "description": "Foreign key to Positions table", "is_primary": false, "is_foreign": true, "references": "Positions.PositionID", "is_required": true},
        {"name": "IsActive", "type": "INTEGER", "description": "Whether user account is active (1) or inactive (0)", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "CreationDate", "type": "TEXT", "description": "When user was created in ISO date format", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "LastLoginDate", "type": "TEXT", "description": "When user last logged in in ISO date format", "is_primary": false, "is_foreign": false, "is_required": false}
    ],
    "relationships": [
        {"related_table": "Positions", "type": "many_to_one", "via_column": "PositionID", "description": "Each user belongs to exactly one Position"},
        {"related_table": "Departments", "type": "many_to_one", "via_column": "PositionID", "via_related": "Positions.DepartmentID", "description": "Each user belongs to a Department through their Position"},
        {"related_table": "GeneralLedger", "type": "one_to_many", "via_column": "UserID", "via_related": "CreatedBy", "description": "Users create General Ledger entries"},
        {"related_table": "AuditLogs", "type": "one_to_many", "via_column": "UserID", "via_related": "UserID", "description": "User activities are tracked in the audit log"},
        {"related_table": "FiscalPeriods", "type": "one_to_many", "via_column": "UserID", "via_related": "ClosedBy", "description": "Users can close fiscal periods"},
        {"related_table": "CashTransactions", "type": "one_to_many", "via_column": "UserID", "via_related": "CreatedBy", "description": "Users create cash transactions"},
        {"related_table": "Invoices", "type": "one_to_many", "via_column": "UserID", "via_related": "CreatedBy", "description": "Users create invoices"},
        {"related_table": "CustomerPayments", "type": "one_to_many", "via_column": "UserID", "via_related": "CreatedBy", "description": "Users record customer payments"},
        {"related_table": "Bills", "type": "one_to_many", "via_column": "UserID", "via_related": "CreatedBy", "description": "Users record vendor bills"},
        {"related_table": "VendorPayments", "type": "one_to_many", "via_column": "UserID", "via_related": "CreatedBy", "description": "Users record vendor payments"},
        {"related_table": "TaxReturns", "type": "one_to_many", "via_column": "UserID", "via_related": "PreparedBy", "description": "Users prepare tax returns"},
        {"related_table": "Budgets", "type": "one_to_many", "via_column": "UserID", "via_related": "CreatedBy", "description": "Users create budgets"},
        {"related_table": "Budgets", "type": "one_to_many", "via_column": "UserID", "via_related": "ApprovedBy", "description": "Users approve budgets"},
        {"related_table": "FinancialReports", "type": "one_to_many", "via_column": "UserID", "via_related": "GeneratedBy", "description": "Users generate financial reports"},
        {"related_table": "RecurringTransactions", "type": "one_to_many", "via_column": "UserID", "via_related": "CreatedBy", "description": "Users create recurring transactions"},
        {"related_table": "Documents", "type": "one_to_many", "via_column": "UserID", "via_related": "UploadedBy", "description": "Users upload documents"},
        {"related_table": "ExpenseReports", "type": "one_to_many", "via_column": "UserID", "via_related": "EmployeeID", "description": "Users submit expense reports"},
        {"related_table": "ExpenseReports", "type": "one_to_many", "via_column": "UserID", "via_related": "ApprovedBy", "description": "Users approve expense reports"},
        {"related_table": "CreditNotes", "type": "one_to_many", "via_column": "UserID", "via_related": "CreatedBy", "description": "Users create credit notes"},
        {"related_table": "DebitNotes", "type": "one_to_many", "via_column": "UserID", "via_related": "CreatedBy", "description": "Users create debit notes"},
        {"related_table": "EmployeesPayrollInfo", "type": "one_to_one", "via_column": "UserID", "via_related": "UserID", "description": "Users who are employees have payroll info"},
        {"related_table": "PayrollRuns", "type": "one_to_many", "via_column": "UserID", "via_related": "ProcessedBy", "description": "Users process payroll runs"}
    ],
    "common_queries": [
        "SELECT * FROM Users WHERE IsActive = 1 ORDER BY Username;",
        "SELECT Users.UserID, Users.Username, Users.FullName, Positions.PositionTitle, Departments.DepartmentName FROM Users JOIN Positions ON Users.PositionID = Positions.PositionID JOIN Departments ON Positions.DepartmentID = Departments.DepartmentID;",
        "SELECT COUNT(*) FROM Users WHERE LastLoginDate >= date('now', '-30 days');"
    ]
}

# --- Cash Management ---
BANK_ACCOUNTS={
    "table_name": "BankAccounts",
    "description": "Stores information about company bank accounts",
    "purpose": "Cash management and reconciliation",
    "columns": [
        {"name": "BankAccountID", "type": "INTEGER", "description": "Primary key identifier for each bank account", "is_primary": true, "is_foreign": false, "is_required": true},
        {"name": "AccountName", "type": "TEXT", "description": "Name of bank account: Main Operating Account, Payroll Account, Savings Account", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "AccountNumber", "type": "TEXT", "description": "Account number", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "BankName", "type": "TEXT", "description": "Name of bank. Naming convention is _ Bank.such as:- First National Bank, Kabir  Bank", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "BankBranch", "type": "TEXT", "description": "Branch identifier. Naming Convention is : _ Branch. Such as: Kabir Branch,Downtown Branch", "is_primary": false, "is_foreign": false, "is_required": false},
        {"name": "IBAN", "type": "TEXT", "description": "International account number", "is_primary": false, "is_foreign": false, "is_required": false},
        {"name": "Currency", "type": "TEXT", "description": "Account currency (e.g., USD, EUR, GBP)", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "AccountType", "type": "TEXT", "description": "Checking, Savings, etc.", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "OpenDate", "type": "TEXT", "description": "Date account was opened in ISO date format", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "CurrentBalance", "type": "REAL", "description": "Current balance (should reflect cash transactions)", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "LastReconciliationDate", "type": "TEXT", "description": "Last bank reconciliation date in ISO date format", "is_primary": false, "is_foreign": false, "is_required": false},
        {"name": "IsActive", "type": "INTEGER", "description": "Whether account is active (1) or inactive (0)", "is_primary": false, "is_foreign": false, "is_required": true}
    ],
    "relationships": [
        {"related_table": "CashTransactions", "type": "one_to_many", "via_column": "BankAccountID", "via_related": "BankAccountID", "description": "Bank accounts have multiple cash transactions"},
        {"related_table": "CustomerPayments", "type": "one_to_many", "via_column": "BankAccountID", "via_related": "BankAccountID", "description": "Customer payments are deposited to bank accounts"},
        {"related_table": "VendorPayments", "type": "one_to_many", "via_column": "BankAccountID", "via_related": "BankAccountID", "description": "Vendor payments are made from bank accounts"}
    ],
    "common_queries": [
        "SELECT * FROM BankAccounts WHERE IsActive = 1 ORDER BY AccountName;",
        "SELECT BankAccounts.AccountName, SUM(CashTransactions.Amount) AS TotalTransactions FROM BankAccounts JOIN CashTransactions ON BankAccounts.BankAccountID = CashTransactions.BankAccountID WHERE CashTransactions.TransactionDate >= date('now', '-30 days') GROUP BY BankAccounts.BankAccountID;",
        "SELECT BankAccounts.AccountName, BankAccounts.CurrentBalance FROM BankAccounts WHERE IsActive = 1 ORDER BY CurrentBalance DESC;"
    ]
}

CASH_TRANSACTIONS={
    "table_name": "CashTransactions",
    "description": "Records all bank account transactions",
    "purpose": "Cash flow management and bank reconciliation",
    "columns": [
        {"name": "TransactionID", "type": "INTEGER", "description": "Primary key identifier for each transaction", "is_primary": true, "is_foreign": false, "is_required": true},
        {"name": "TransactionDate", "type": "TEXT", "description": "Date of transaction in ISO date format", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "BankAccountID", "type": "INTEGER", "description": "Foreign key to BankAccounts table", "is_primary": false, "is_foreign": true, "references": "BankAccounts.BankAccountID", "is_required": true},
        {"name": "TransactionType", "type": "TEXT", "description": "This are the  TransactionTypes ->Deposit, Withdrawal, Transfer, Bank Fee, Interest Earned", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "Amount", "type": "REAL", "description": "Transaction amount (positive for inflows/deposits, negative for outflows/withdrawals)", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "Description", "type": "TEXT", "description": "Transaction description", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "Reference", "type": "TEXT", "description": "Reference number or code (e.g., Check #, Wire ID)", "is_primary": false, "is_foreign": false, "is_required": false},
        {"name": "RelatedAccountID", "type": "INTEGER", "description": "Foreign key to ChartOfAccounts table (e.g., Interest Income, Bank Fees Expense)", "is_primary": false, "is_foreign": true, "references": "ChartOfAccounts.AccountID", "is_required": true},
        {"name": "CreatedBy", "type": "INTEGER", "description": "Foreign key to Users table", "is_primary": false, "is_foreign": true, "references": "Users.UserID", "is_required": true},
        {"name": "CreationDate", "type": "TEXT", "description": "When transaction was created in ISO date format", "is_primary": false, "is_foreign": false, "is_required": true}
    ],
    "relationships": [
        {"related_table": "BankAccounts", "type": "many_to_one", "via_column": "BankAccountID", "description": "Each transaction belongs to exactly one bank account"},
        {"related_table": "ChartOfAccounts", "type": "many_to_one", "via_column": "RelatedAccountID", "description": "Each transaction affects exactly one general ledger account (other than the cash account implied by BankAccountID)"},
        {"related_table": "Users", "type": "many_to_one", "via_column": "CreatedBy", "description": "Each transaction is created by exactly one user"}
    ],
    "common_queries": [
        "SELECT * FROM CashTransactions WHERE TransactionDate >= date('now', '-30 days') ORDER BY TransactionDate DESC;",
        "SELECT ct.TransactionDate, ct.Amount, ct.Description, ba.AccountName FROM CashTransactions ct JOIN BankAccounts ba ON ct.BankAccountID = ba.BankAccountID ORDER BY ct.TransactionDate DESC LIMIT 50;",
        "SELECT TransactionType, SUM(Amount) AS TotalAmount FROM CashTransactions WHERE TransactionDate >= date('now', '-30 days') GROUP BY TransactionType;"
    ]
}

# --- Accounts Receivable ---
CUSTOMERS={
    "table_name": "Customers",
    "description": "Stores customer information",
    "purpose": "Client relationship management and accounts receivable",
    "columns": [
        {"name": "CustomerID", "type": "INTEGER", "description": "Primary key identifier for each customer", "is_primary": true, "is_foreign": false, "is_required": true},
        {"name": "CustomerName", "type": "TEXT", "description": "Customer name", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "ContactPerson", "type": "TEXT", "description": "Primary contact name", "is_primary": false, "is_foreign": false, "is_required": false},
        {"name": "Email", "type": "TEXT", "description": "Contact email", "is_primary": false, "is_foreign": false, "is_required": false},
        {"name": "Phone", "type": "TEXT", "description": "Contact phone", "is_primary": false, "is_foreign": false, "is_required": false},
        {"name": "Address", "type": "TEXT", "description": "Customer address", "is_primary": false, "is_foreign": false, "is_required": false},
        {"name": "TaxID", "type": "TEXT", "description": "Tax identification number", "is_primary": false, "is_foreign": false, "is_required": false},
        {"name": "CreditLimit", "type": "REAL", "description": "Maximum credit allowed", "is_primary": false, "is_foreign": false, "is_required": false},
        {"name": "PaymentTerms", "type": "TEXT", "description": "payment terms are -> Net 30, Net 45,Net 15. Naming convention for this is Net _. ", "is_primary": false, "is_foreign": false, "is_required": false},
        {"name": "IsActive", "type": "INTEGER", "description": "Whether customer is active (1) or inactive (0)", "is_primary": false, "is_foreign": false, "is_required": true}
    ],
    "relationships": [
        {"related_table": "Invoices", "type": "one_to_many", "via_column": "CustomerID", "via_related": "CustomerID", "description": "Customers receive multiple invoices"},
        {"related_table": "CustomerPayments", "type": "one_to_many", "via_column": "CustomerID", "via_related": "CustomerID", "description": "Customers make multiple payments"},
        {"related_table": "CreditNotes", "type": "one_to_many", "via_column": "CustomerID", "via_related": "CustomerID", "description": "Customers can receive credit notes"}
    ],
    "common_queries": [
        "SELECT * FROM Customers WHERE IsActive = 1 ORDER BY CustomerName;",
        "SELECT c.CustomerName, SUM(i.TotalAmount) AS TotalInvoiced, SUM(i.PaidAmount) AS TotalPaid, SUM(i.TotalAmount - i.PaidAmount) AS Balance FROM Customers c LEFT JOIN Invoices i ON c.CustomerID = i.CustomerID WHERE i.Status != 'Void' GROUP BY c.CustomerID;",
        "SELECT c.CustomerName, COUNT(i.InvoiceID) AS InvoiceCount FROM Customers c LEFT JOIN Invoices i ON c.CustomerID = i.CustomerID WHERE i.Status IN ('Issued', 'Partially Paid', 'Overdue') AND i.DueDate < date('now') AND i.PaidAmount < i.TotalAmount GROUP BY c.CustomerID HAVING InvoiceCount > 0;"
    ]
}

INVOICES={
    "table_name": "Invoices",
    "description": "Stores customer invoices",
    "purpose": "Billing and accounts receivable",
    "columns": [
        {"name": "InvoiceID", "type": "INTEGER", "description": "Primary key identifier for each invoice", "is_primary": true, "is_foreign": false, "is_required": true},
        {"name": "InvoiceNumber", "type": "TEXT", "description": "Unique invoice number", "is_primary": false, "is_foreign": false, "is_required": true, "is_unique": true},
        {"name": "CustomerID", "type": "INTEGER", "description": "Foreign key to Customers table", "is_primary": false, "is_foreign": true, "references": "Customers.CustomerID", "is_required": true},
        {"name": "InvoiceDate", "type": "TEXT", "description": "Date invoice was created in ISO date format", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "DueDate", "type": "TEXT", "description": "Date payment is due in ISO date format", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "TotalAmount", "type": "REAL", "description": "Total invoice amount (sum of line items + taxes)", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "PaidAmount", "type": "REAL", "description": "Amount paid to date. Should reflect sum of applied InvoicePaymentAllocations. Must be kept consistent.", "is_primary": false, "is_foreign": false, "is_required": true, "default_value": 0},
        {"name": "Status", "type": "TEXT", "description": "Status are -->> Draft, Issued, Partially Paid, Paid, Void, Overdue", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "PaymentTerms", "type": "TEXT", "description": "Specific payment terms.payment terms are -> Net 30, Net 45,Net 15. Naming convention for this is Net _. ", "is_primary": false, "is_foreign": false, "is_required": false},
        {"name": "CreatedBy", "type": "INTEGER", "description": "Foreign key to Users table", "is_primary": false, "is_foreign": true, "references": "Users.UserID", "is_required": true},
        {"name": "CreationDate", "type": "TEXT", "description": "When invoice was created in ISO date format", "is_primary": false, "is_foreign": false, "is_required": true}
    ],
    "relationships": [
        {"related_table": "Customers", "type": "many_to_one", "via_column": "CustomerID", "description": "Each invoice belongs to exactly one customer"},
        {"related_table": "InvoiceItems", "type": "one_to_many", "via_column": "InvoiceID", "via_related": "InvoiceID", "description": "Invoices contain multiple line items"},
        {"related_table": "Users", "type": "many_to_one", "via_column": "CreatedBy", "description": "Each invoice is created by exactly one user"},
        {"related_table": "CreditNotes", "type": "one_to_many", "via_column": "InvoiceID", "via_related": "InvoiceID", "description": "An invoice may have related credit notes"},
        {"related_table": "InvoicePaymentAllocations", "type": "one_to_many", "via_column": "InvoiceID", "via_related": "InvoiceID", "description": "An invoice can have multiple payment allocations applied to it"}
    ],
    "common_queries": [
        "SELECT * FROM Invoices WHERE Status IN ('Issued', 'Partially Paid', 'Overdue') AND DueDate < date('now') ORDER BY DueDate;",
        "SELECT i.InvoiceNumber, i.InvoiceDate, i.TotalAmount, i.PaidAmount, c.CustomerName FROM Invoices i JOIN Customers c ON i.CustomerID = c.CustomerID ORDER BY i.InvoiceDate DESC;",
        "SELECT Status, COUNT(*) AS InvoiceCount, SUM(TotalAmount) AS TotalAmount, SUM(TotalAmount - PaidAmount) AS TotalOutstanding FROM Invoices GROUP BY Status;"
    ]
}

INVOICE_ITEMS={
    "table_name": "InvoiceItems",
    "description": "Individual line items on invoices",
    "purpose": "Detailed invoice item tracking, revenue account assignment, product tracking, and tax calculation",
    "columns": [
        {"name": "ItemID", "type": "INTEGER", "description": "Primary key identifier for each item", "is_primary": true, "is_foreign": false, "is_required": true},
        {"name": "InvoiceID", "type": "INTEGER", "description": "Foreign key to Invoices table", "is_primary": false, "is_foreign": true, "references": "Invoices.InvoiceID", "is_required": true},
        {"name": "ProductID", "type": "INTEGER", "description": "Foreign key to Products table, linking item to a specific product/service", "is_primary": false, "is_foreign": true, "references": "Products.ProductID", "is_required": false},
        {"name": "Description", "type": "TEXT", "description": "Line item description (can be overridden from Product description)", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "Quantity", "type": "REAL", "description": "Quantity of items", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "UnitPrice", "type": "REAL", "description": "Price per unit", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "TaxRateID", "type": "INTEGER", "description": "Foreign key to TaxRates table, specifying the tax applied to this item", "is_primary": false, "is_foreign": true, "references": "TaxRates.TaxRateID", "is_required": false},
        {"name": "AccountID", "type": "INTEGER", "description": "Foreign key to ChartOfAccounts table (typically a revenue account)", "is_primary": false, "is_foreign": true, "references": "ChartOfAccounts.AccountID", "is_required": true}
    ],
    "relationships": [
        {"related_table": "Invoices", "type": "many_to_one", "via_column": "InvoiceID", "description": "Each line item belongs to exactly one invoice"},
        {"related_table": "ChartOfAccounts", "type": "many_to_one", "via_column": "AccountID", "description": "Each line item affects exactly one revenue account"},
        {"related_table": "TaxRates", "type": "many_to_one", "via_column": "TaxRateID", "description": "Each line item may have one tax rate applied"},
        {"related_table": "Products", "type": "many_to_one", "via_column": "ProductID", "description": "Each line item may correspond to one product/service"},
        {"related_table": "CostOfGoodsSoldLog", "type": "one_to_many", "via_column": "ItemID", "via_related": "InvoiceItemID", "description": "Invoice items that are inventory items trigger COGS log entries"}

    ],
    "common_queries": [
        "SELECT * FROM InvoiceItems WHERE InvoiceID = ?;",
        "SELECT i.InvoiceNumber, ii.Description, ii.Quantity, ii.UnitPrice, (ii.Quantity * ii.UnitPrice) AS LineTotal FROM InvoiceItems ii JOIN Invoices i ON ii.InvoiceID = i.InvoiceID ORDER BY i.InvoiceDate DESC;",
        "SELECT coa.AccountName, SUM(ii.Quantity * ii.UnitPrice) AS TotalRevenue FROM InvoiceItems ii JOIN ChartOfAccounts coa ON ii.AccountID = coa.AccountID JOIN Invoices i ON ii.InvoiceID = i.InvoiceID WHERE i.InvoiceDate >= date('now', '-30 days') GROUP BY coa.AccountID;"
    ]
}

CUSTOMER_PAYMENTS={
    "table_name": "CustomerPayments",
    "description": "Tracks payments received from customers",
    "purpose": "Accounts receivable collection, cash management, and payment allocation tracking",
    "columns": [
        {"name": "PaymentID", "type": "INTEGER", "description": "Primary key identifier for each payment", "is_primary": true, "is_foreign": false, "is_required": true},
        {"name": "CustomerID", "type": "INTEGER", "description": "Foreign key to Customers table", "is_primary": false, "is_foreign": true, "references": "Customers.CustomerID", "is_required": true},
        {"name": "PaymentDate", "type": "TEXT", "description": "Date payment was received in ISO date format", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "Amount", "type": "REAL", "description": "Total payment amount received", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "PaymentMethod", "type": "TEXT", "description": "How payment was made (e.g., Check, ACH, Wire, Credit Card, Cash)", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "Reference", "type": "TEXT", "description": "Payment reference number (e.g., Check #)", "is_primary": false, "is_foreign": false, "is_required": false},
        {"name": "BankAccountID", "type": "INTEGER", "description": "Foreign key to BankAccounts table where payment was deposited", "is_primary": false, "is_foreign": true, "references": "BankAccounts.BankAccountID", "is_required": true},
        {"name": "Notes", "type": "TEXT", "description": "Additional information", "is_primary": false, "is_foreign": false, "is_required": false},
        {"name": "CreatedBy", "type": "INTEGER", "description": "Foreign key to Users table", "is_primary": false, "is_foreign": true, "references": "Users.UserID", "is_required": true},
        {"name": "CreationDate", "type": "TEXT", "description": "When payment was recorded in ISO date format", "is_primary": false, "is_foreign": false, "is_required": true}
    ],
    "relationships": [
        {"related_table": "Customers", "type": "many_to_one", "via_column": "CustomerID", "description": "Each payment is made by exactly one customer"},
        {"related_table": "BankAccounts", "type": "many_to_one", "via_column": "BankAccountID", "description": "Each payment is deposited to exactly one bank account"},
        {"related_table": "Users", "type": "many_to_one", "via_column": "CreatedBy", "description": "Each payment is recorded by exactly one user"},
        {"related_table": "InvoicePaymentAllocations", "type": "one_to_many", "via_column": "PaymentID", "via_related": "PaymentID", "description": "A payment can be allocated to multiple invoices"}
    ],
    "common_queries": [
        "SELECT * FROM CustomerPayments WHERE PaymentDate >= date('now', '-30 days') ORDER BY PaymentDate DESC;",
        "SELECT cp.PaymentDate, cp.Amount, cp.PaymentMethod, c.CustomerName FROM CustomerPayments cp JOIN Customers c ON cp.CustomerID = c.CustomerID ORDER BY cp.PaymentDate DESC;",
        "SELECT PaymentMethod, SUM(Amount) AS TotalAmount FROM CustomerPayments WHERE PaymentDate >= date('now', '-30 days') GROUP BY PaymentMethod;",
        "SELECT cp.PaymentID, cp.Amount, (SELECT SUM(AllocatedAmount) FROM InvoicePaymentAllocations WHERE PaymentID = cp.PaymentID) as TotalAllocated FROM CustomerPayments cp;"
    ]
}

INVOICE_PAYMENT_ALLOCATIONS={
    "table_name": "InvoicePaymentAllocations",
    "description": "Links customer payments to specific invoices, showing how payments are applied.",
    "purpose": "Detailed tracking of payment application to invoices, supporting accurate AR aging and invoice status.",
    "columns": [
        {"name": "AllocationID", "type": "INTEGER", "description": "Primary key identifier for each allocation entry", "is_primary": true, "is_foreign": false, "is_required": true},
        {"name": "PaymentID", "type": "INTEGER", "description": "Foreign key to the CustomerPayments table", "is_primary": false, "is_foreign": true, "references": "CustomerPayments.PaymentID", "is_required": true},
        {"name": "InvoiceID", "type": "INTEGER", "description": "Foreign key to the Invoices table", "is_primary": false, "is_foreign": true, "references": "Invoices.InvoiceID", "is_required": true},
        {"name": "AllocatedAmount", "type": "REAL", "description": "The portion of the payment applied to this specific invoice", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "AllocationDate", "type": "TEXT", "description": "Date the allocation was made in ISO date format", "is_primary": false, "is_foreign": false, "is_required": true}
    ],
    "relationships": [
        {"related_table": "CustomerPayments", "type": "many_to_one", "via_column": "PaymentID", "description": "Each allocation belongs to exactly one customer payment"},
        {"related_table": "Invoices", "type": "many_to_one", "via_column": "InvoiceID", "description": "Each allocation applies to exactly one invoice"}
    ],
    "common_queries": [
        "SELECT * FROM InvoicePaymentAllocations WHERE PaymentID = ?;",
        "SELECT * FROM InvoicePaymentAllocations WHERE InvoiceID = ?;",
        "SELECT ipa.AllocationDate, ipa.AllocatedAmount, i.InvoiceNumber, cp.PaymentDate, cp.Amount AS PaymentAmount FROM InvoicePaymentAllocations ipa JOIN Invoices i ON ipa.InvoiceID = i.InvoiceID JOIN CustomerPayments cp ON ipa.PaymentID = cp.PaymentID ORDER BY ipa.AllocationDate DESC;",
        "SELECT InvoiceID, SUM(AllocatedAmount) as TotalAllocated FROM InvoicePaymentAllocations GROUP BY InvoiceID;"
    ]
}

CREDIT_NOTES={
    "table_name": "CreditNotes",
    "description": "Credit notes issued to customers for returns, allowances, or corrections",
    "purpose": "Managing customer credits and invoice adjustments",
    "columns": [
        {"name": "CreditNoteID", "type": "INTEGER", "description": "Primary key identifier for each credit note", "is_primary": true, "is_foreign": false, "is_required": true},
        {"name": "CreditNoteNumber", "type": "TEXT", "description": "Unique number for the credit note", "is_primary": false, "is_foreign": false, "is_required": true, "is_unique": true},
        {"name": "CustomerID", "type": "INTEGER", "description": "Foreign key to Customers table", "is_primary": false, "is_foreign": true, "references": "Customers.CustomerID", "is_required": true},
        {"name": "InvoiceID", "type": "INTEGER", "description": "Foreign key to the original Invoice table (optional)", "is_primary": false, "is_foreign": true, "references": "Invoices.InvoiceID", "is_required": false},
        {"name": "Date", "type": "TEXT", "description": "Date when credit note was issued in ISO format", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "Amount", "type": "REAL", "description": "Amount of the credit note (positive value)", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "Reason", "type": "TEXT", "description": "Reason for issuing the credit note (e.g., Return, Allowance, Correction)", "is_primary": false, "is_foreign": false, "is_required": false},
        {"name": "Status", "type": "TEXT", "description": "Status (e.g., Open, Applied, Void)", "is_primary": false, "is_foreign": false, "is_required": true, "default_value": "Open"},
        {"name": "AppliedAmount", "type": "REAL", "description": "Amount of this credit note that has been applied to invoices or refunded", "is_primary": false, "is_foreign": false, "is_required": true, "default_value": 0},
        {"name": "CreatedBy", "type": "INTEGER", "description": "Foreign key to Users table", "is_primary": false, "is_foreign": true, "references": "Users.UserID", "is_required": true}
    ],
    "relationships": [
        {"related_table": "Customers", "type": "many_to_one", "via_column": "CustomerID", "description": "Each credit note is issued to exactly one customer"},
        {"related_table": "Invoices", "type": "many_to_one", "via_column": "InvoiceID", "description": "Each credit note may be related to one original invoice"},
        {"related_table": "Users", "type": "many_to_one", "via_column": "CreatedBy", "description": "Each credit note is created by exactly one user"}
        // Add relationship to a CreditNoteApplication table if tracking application to specific invoices/refunds
    ],
    "common_queries": [
        "SELECT cn.*, c.CustomerName FROM CreditNotes cn JOIN Customers c ON cn.CustomerID = c.CustomerID WHERE cn.Date >= date('now', '-90 days');",
        "SELECT cn.*, i.InvoiceNumber FROM CreditNotes cn LEFT JOIN Invoices i ON cn.InvoiceID = i.InvoiceID WHERE cn.CustomerID = ?;",
        "SELECT SUM(Amount - AppliedAmount) as TotalOpenCredit FROM CreditNotes WHERE Status = 'Open';"
    ]
}

# --- Accounts Payable ---
VENDORS={
    "table_name": "Vendors",
    "description": "Stores vendor information",
    "purpose": "Supplier relationship management and accounts payable",
    "columns": [
        {"name": "VendorID", "type": "INTEGER", "description": "Primary key identifier for each vendor", "is_primary": true, "is_foreign": false, "is_required": true},
        {"name": "VendorName", "type": "TEXT", "description": "Vendor name", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "ContactPerson", "type": "TEXT", "description": "Primary contact name", "is_primary": false, "is_foreign": false, "is_required": false},
        {"name": "Email", "type": "TEXT", "description": "Contact email", "is_primary": false, "is_foreign": false, "is_required": false},
        {"name": "Phone", "type": "TEXT", "description": "Contact phone", "is_primary": false, "is_foreign": false, "is_required": false},
        {"name": "Address", "type": "TEXT", "description": "Vendor address", "is_primary": false, "is_foreign": false, "is_required": false},
        {"name": "TaxID", "type": "TEXT", "description": "Tax identification number", "is_primary": false, "is_foreign": false, "is_required": false},
        {"name": "PaymentTerms", "type": "TEXT", "description": "payment terms are -> Net 30, Net 45,Net 15. Naming convention for this is Net _. ", "is_primary": false, "is_foreign": false, "is_required": false},
        {"name": "IsActive", "type": "INTEGER", "description": "Whether vendor is active (1) or inactive (0)", "is_primary": false, "is_foreign": false, "is_required": true}
    ],
    "relationships": [
        {"related_table": "Bills", "type": "one_to_many", "via_column": "VendorID", "via_related": "VendorID", "description": "Vendors provide multiple bills"},
        {"related_table": "VendorPayments", "type": "one_to_many", "via_column": "VendorID", "via_related": "VendorID", "description": "Vendors receive multiple payments"},
        {"related_table": "DebitNotes", "type": "one_to_many", "via_column": "VendorID", "via_related": "VendorID", "description": "Vendors can receive debit notes"},
        {"related_table": "InventoryItems", "type": "one_to_many", "via_column": "VendorID", "via_related": "PreferredVendorID", "description": "Vendors can be preferred suppliers for inventory items"}
    ],
    "common_queries": [
        "SELECT * FROM Vendors WHERE IsActive = 1 ORDER BY VendorName;",
        "SELECT v.VendorName, SUM(b.TotalAmount) AS TotalBilled, SUM(b.PaidAmount) AS TotalPaid, SUM(b.TotalAmount - b.PaidAmount) AS Balance FROM Vendors v LEFT JOIN Bills b ON v.VendorID = b.VendorID WHERE b.Status != 'Void' GROUP BY v.VendorID;",
        "SELECT v.VendorName, COUNT(b.BillID) AS BillCount FROM Vendors v LEFT JOIN Bills b ON v.VendorID = b.VendorID WHERE b.Status IN ('Received', 'Approved', 'Partially Paid', 'Overdue') AND b.DueDate < date('now') AND b.PaidAmount < b.TotalAmount GROUP BY v.VendorID HAVING BillCount > 0;"
    ]
}

BILLS={
    "table_name": "Bills",
    "description": "Stores vendor bills to be paid",
    "purpose": "Accounts payable and expense management",
    "columns": [
        {"name": "BillID", "type": "INTEGER", "description": "Primary key identifier for each bill", "is_primary": true, "is_foreign": false, "is_required": true},
        {"name": "BillNumber", "type": "TEXT", "description": "Unique bill number from vendor", "is_primary": false, "is_foreign": false, "is_required": true, "is_unique": false}, # Vendor bill numbers might not be unique across vendors
        {"name": "VendorID", "type": "INTEGER", "description": "Foreign key to Vendors table", "is_primary": false, "is_foreign": true, "references": "Vendors.VendorID", "is_required": true},
        {"name": "BillDate", "type": "TEXT", "description": "Date on the vendor bill in ISO date format", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "DueDate", "type": "TEXT", "description": "Date payment is due in ISO date format", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "TotalAmount", "type": "REAL", "description": "Total bill amount (sum of line items + taxes)", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "PaidAmount", "type": "REAL", "description": "Amount paid to date. Should reflect sum of applied BillPaymentAllocations. Must be kept consistent.", "is_primary": false, "is_foreign": false, "is_required": true, "default_value": 0},
        {"name": "Status", "type": "TEXT", "description": "Status are -->> Draft, Received, Approved, Partially Paid, Paid, Void, Overdue", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "CreatedBy", "type": "INTEGER", "description": "Foreign key to Users table (who entered the bill)", "is_primary": false, "is_foreign": true, "references": "Users.UserID", "is_required": true},
        {"name": "CreationDate", "type": "TEXT", "description": "When bill was recorded in the system in ISO date format", "is_primary": false, "is_foreign": false, "is_required": true}
    ],
    "relationships": [
        {"related_table": "Vendors", "type": "many_to_one", "via_column": "VendorID", "description": "Each bill belongs to exactly one vendor"},
        {"related_table": "BillItems", "type": "one_to_many", "via_column": "BillID", "via_related": "BillID", "description": "Bills contain multiple line items"},
        {"related_table": "Users", "type": "many_to_one", "via_column": "CreatedBy", "description": "Each bill is created by exactly one user"},
        {"related_table": "DebitNotes", "type": "one_to_many", "via_column": "BillID", "via_related": "BillID", "description": "A bill may have related debit notes"},
        {"related_table": "BillPaymentAllocations", "type": "one_to_many", "via_column": "BillID", "via_related": "BillID", "description": "A bill can have multiple payment allocations applied to it"}
    ],
    "common_queries": [
        "SELECT * FROM Bills WHERE Status IN ('Received', 'Approved', 'Partially Paid', 'Overdue') AND DueDate < date('now') ORDER BY DueDate;",
        "SELECT b.BillNumber, b.BillDate, b.TotalAmount, b.PaidAmount, v.VendorName FROM Bills b JOIN Vendors v ON b.VendorID = v.VendorID ORDER BY b.BillDate DESC;",
        "SELECT Status, COUNT(*) AS BillCount, SUM(TotalAmount) AS TotalAmount, SUM(TotalAmount - PaidAmount) AS TotalOutstanding FROM Bills GROUP BY Status;"
    ]
}

BILL_ITEMS={
    "table_name": "BillItems",
    "description": "Individual line items on bills",
    "purpose": "Detailed expense tracking, expense account assignment, and tax calculation",
    "columns": [
        {"name": "ItemID", "type": "INTEGER", "description": "Primary key identifier for each item", "is_primary": true, "is_foreign": false, "is_required": true},
        {"name": "BillID", "type": "INTEGER", "description": "Foreign key to Bills table", "is_primary": false, "is_foreign": true, "references": "Bills.BillID", "is_required": true},
        {"name": "Description", "type": "TEXT", "description": "Line item description", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "Quantity", "type": "REAL", "description": "Quantity of items", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "UnitPrice", "type": "REAL", "description": "Price per unit", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "TaxRateID", "type": "INTEGER", "description": "Foreign key to TaxRates table, specifying the tax applied to this item", "is_primary": false, "is_foreign": true, "references": "TaxRates.TaxRateID", "is_required": false},
        {"name": "AccountID", "type": "INTEGER", "description": "Foreign key to ChartOfAccounts table (typically an expense account)", "is_primary": false, "is_foreign": true, "references": "ChartOfAccounts.AccountID", "is_required": true}
    ],
    "relationships": [
        {"related_table": "Bills", "type": "many_to_one", "via_column": "BillID", "description": "Each line item belongs to exactly one bill"},
        {"related_table": "ChartOfAccounts", "type": "many_to_one", "via_column": "AccountID", "description": "Each line item affects exactly one expense account"},
        {"related_table": "TaxRates", "type": "many_to_one", "via_column": "TaxRateID", "description": "Each line item may have one tax rate applied"}
    ],
    "common_queries": [
        "SELECT * FROM BillItems WHERE BillID = ?;",
        "SELECT b.BillNumber, bi.Description, bi.Quantity, bi.UnitPrice, (bi.Quantity * bi.UnitPrice) AS LineTotal FROM BillItems bi JOIN Bills b ON bi.BillID = b.BillID ORDER BY b.BillDate DESC;",
        "SELECT coa.AccountName, SUM(bi.Quantity * bi.UnitPrice) AS TotalExpense FROM BillItems bi JOIN ChartOfAccounts coa ON bi.AccountID = coa.AccountID JOIN Bills b ON bi.BillID = b.BillID WHERE b.BillDate >= date('now', '-30 days') GROUP BY coa.AccountID;"
    ]
}

VENDOR_PAYMENTS={
    "table_name": "VendorPayments",
    "description": "Tracks payments made to vendors",
    "purpose": "Accounts payable payment processing, cash management, and payment allocation tracking",
    "columns": [
        {"name": "PaymentID", "type": "INTEGER", "description": "Primary key identifier for each payment", "is_primary": true, "is_foreign": false, "is_required": true},
        {"name": "VendorID", "type": "INTEGER", "description": "Foreign key to Vendors table", "is_primary": false, "is_foreign": true, "references": "Vendors.VendorID", "is_required": true},
        {"name": "PaymentDate", "type": "TEXT", "description": "Date payment was made in ISO date format", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "Amount", "type": "REAL", "description": "Total payment amount made", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "PaymentMethod", "type": "TEXT", "description": "How payment was made (e.g., Check, ACH, Wire Transfer, Credit Card)", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "Reference", "type": "TEXT", "description": "Payment reference number (e.g., Check #, Confirmation ID)", "is_primary": false, "is_foreign": false, "is_required": false},
        {"name": "BankAccountID", "type": "INTEGER", "description": "Foreign key to BankAccounts table from which payment was made", "is_primary": false, "is_foreign": true, "references": "BankAccounts.BankAccountID", "is_required": true},
        {"name": "Notes", "type": "TEXT", "description": "Additional information", "is_primary": false, "is_foreign": false, "is_required": false},
        {"name": "CreatedBy", "type": "INTEGER", "description": "Foreign key to Users table (who recorded the payment)", "is_primary": false, "is_foreign": true, "references": "Users.UserID", "is_required": true},
        {"name": "CreationDate", "type": "TEXT", "description": "When payment was recorded in the system in ISO date format", "is_primary": false, "is_foreign": false, "is_required": true}
    ],
    "relationships": [
        {"related_table": "Vendors", "type": "many_to_one", "via_column": "VendorID", "description": "Each payment is made to exactly one vendor"},
        {"related_table": "BankAccounts", "type": "many_to_one", "via_column": "BankAccountID", "description": "Each payment is made from exactly one bank account"},
        {"related_table": "Users", "type": "many_to_one", "via_column": "CreatedBy", "description": "Each payment is recorded by exactly one user"},
        {"related_table": "BillPaymentAllocations", "type": "one_to_many", "via_column": "PaymentID", "via_related": "PaymentID", "description": "A payment can be allocated to multiple bills"}
    ],
    "common_queries": [
        "SELECT * FROM VendorPayments WHERE PaymentDate >= date('now', '-30 days') ORDER BY PaymentDate DESC;",
        "SELECT vp.PaymentDate, vp.Amount, vp.PaymentMethod, v.VendorName FROM VendorPayments vp JOIN Vendors v ON vp.VendorID = v.VendorID ORDER BY vp.PaymentDate DESC;",
        "SELECT PaymentMethod, SUM(Amount) AS TotalAmount FROM VendorPayments WHERE PaymentDate >= date('now', '-30 days') GROUP BY PaymentMethod;",
         "SELECT vp.PaymentID, vp.Amount, (SELECT SUM(AllocatedAmount) FROM BillPaymentAllocations WHERE PaymentID = vp.PaymentID) as TotalAllocated FROM VendorPayments vp;"
    ]
}

BILL_PAYMENT_ALLOCATIONS={
    "table_name": "BillPaymentAllocations",
    "description": "Links vendor payments to specific bills, showing how payments are applied.",
    "purpose": "Detailed tracking of payment application to bills, supporting accurate AP aging and bill status.",
    "columns": [
        {"name": "AllocationID", "type": "INTEGER", "description": "Primary key identifier for each allocation entry", "is_primary": true, "is_foreign": false, "is_required": true},
        {"name": "PaymentID", "type": "INTEGER", "description": "Foreign key to the VendorPayments table", "is_primary": false, "is_foreign": true, "references": "VendorPayments.PaymentID", "is_required": true},
        {"name": "BillID", "type": "INTEGER", "description": "Foreign key to the Bills table", "is_primary": false, "is_foreign": true, "references": "Bills.BillID", "is_required": true},
        {"name": "AllocatedAmount", "type": "REAL", "description": "The portion of the payment applied to this specific bill", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "AllocationDate", "type": "TEXT", "description": "Date the allocation was made in ISO date format", "is_primary": false, "is_foreign": false, "is_required": true}
    ],
    "relationships": [
        {"related_table": "VendorPayments", "type": "many_to_one", "via_column": "PaymentID", "description": "Each allocation belongs to exactly one vendor payment"},
        {"related_table": "Bills", "type": "many_to_one", "via_column": "BillID", "description": "Each allocation applies to exactly one bill"}
    ],
    "common_queries": [
        "SELECT * FROM BillPaymentAllocations WHERE PaymentID = ?;",
        "SELECT * FROM BillPaymentAllocations WHERE BillID = ?;",
        "SELECT bpa.AllocationDate, bpa.AllocatedAmount, b.BillNumber, vp.PaymentDate, vp.Amount AS PaymentAmount FROM BillPaymentAllocations bpa JOIN Bills b ON bpa.BillID = b.BillID JOIN VendorPayments vp ON bpa.PaymentID = vp.PaymentID ORDER BY bpa.AllocationDate DESC;",
        "SELECT BillID, SUM(AllocatedAmount) as TotalAllocated FROM BillPaymentAllocations GROUP BY BillID;"
    ]
}

DEBIT_NOTES={
    "table_name": "DebitNotes",
    "description": "Debit notes issued to vendors for returns, allowances, or corrections",
    "purpose": "Managing vendor debits and bill adjustments",
    "columns": [
        {"name": "DebitNoteID", "type": "INTEGER", "description": "Primary key identifier for each debit note", "is_primary": true, "is_foreign": false, "is_required": true},
        {"name": "DebitNoteNumber", "type": "TEXT", "description": "Unique number for the debit note", "is_primary": false, "is_foreign": false, "is_required": true, "is_unique": true},
        {"name": "VendorID", "type": "INTEGER", "description": "Foreign key to Vendors table", "is_primary": false, "is_foreign": true, "references": "Vendors.VendorID", "is_required": true},
        {"name": "BillID", "type": "INTEGER", "description": "Foreign key to the original Bill table (optional)", "is_primary": false, "is_foreign": true, "references": "Bills.BillID", "is_required": false},
        {"name": "Date", "type": "TEXT", "description": "Date when debit note was issued in ISO format", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "Amount", "type": "REAL", "description": "Amount of the debit note (positive value)", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "Reason", "type": "TEXT", "description": "Reason for issuing the debit note", "is_primary": false, "is_foreign": false, "is_required": false},
        {"name": "Status", "type": "TEXT", "description": "Status (e.g., Open, Applied, Void)", "is_primary": false, "is_foreign": false, "is_required": true, "default_value": "Open"},
        {"name": "AppliedAmount", "type": "REAL", "description": "Amount of this debit note that has been applied to bills or received as refund", "is_primary": false, "is_foreign": false, "is_required": true, "default_value": 0},
        {"name": "CreatedBy", "type": "INTEGER", "description": "Foreign key to Users table", "is_primary": false, "is_foreign": true, "references": "Users.UserID", "is_required": true}
    ],
    "relationships": [
        {"related_table": "Vendors", "type": "many_to_one", "via_column": "VendorID", "description": "Each debit note is issued to exactly one vendor"},
        {"related_table": "Bills", "type": "many_to_one", "via_column": "BillID", "description": "Each debit note may be related to one original bill"},
        {"related_table": "Users", "type": "many_to_one", "via_column": "CreatedBy", "description": "Each debit note is created by exactly one user"}
         // Add relationship to a DebitNoteApplication table if tracking application to specific bills/refunds
    ],
    "common_queries": [
        "SELECT dn.*, v.VendorName FROM DebitNotes dn JOIN Vendors v ON dn.VendorID = v.VendorID WHERE dn.Date >= date('now', '-90 days');",
        "SELECT dn.*, b.BillNumber FROM DebitNotes dn LEFT JOIN Bills b ON dn.BillID = b.BillID WHERE dn.VendorID = ?;",
        "SELECT SUM(Amount - AppliedAmount) as TotalOpenDebit FROM DebitNotes WHERE Status = 'Open';"
    ]
}

# --- Tax Management ---
TAX_RATES={
    "table_name": "TaxRates",
    "description": "Defines tax rates used in the system",
    "purpose": "Tax calculation basis and reporting",
    "columns": [
        {"name": "TaxRateID", "type": "INTEGER", "description": "Primary key identifier for each tax rate", "is_primary": true, "is_foreign": false, "is_required": true},
        {"name": "TaxName", "type": "TEXT", "description": "Name of tax.here are the names:-Standard Sales Tax,Reduced Rate,VAT Reduced,VAT Standard ,No Tax", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "Rate", "type": "REAL", "description": "Tax rate as decimal (e.g., 0.08 for 8%)", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "Description", "type": "TEXT", "description": "Tax description", "is_primary": false, "is_foreign": false, "is_required": false},
        {"name": "IsActive", "type": "INTEGER", "description": "Whether tax rate is active (1) or inactive (0)", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "EffectiveDate", "type": "TEXT", "description": "When tax rate became effective in ISO date format", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "EndDate", "type": "TEXT", "description": "When tax rate expires in ISO date format", "is_primary": false, "is_foreign": false, "is_required": false}
    ],
    "relationships": [
        {"related_table": "InvoiceItems", "type": "one_to_many", "via_column": "TaxRateID", "via_related": "TaxRateID", "description": "Tax rates can be applied to multiple invoice line items"},
        {"related_table": "BillItems", "type": "one_to_many", "via_column": "TaxRateID", "via_related": "TaxRateID", "description": "Tax rates can be applied to multiple bill line items"}
    ],
    "common_queries": [
        "SELECT * FROM TaxRates WHERE IsActive = 1 ORDER BY TaxName;",
        "SELECT * FROM TaxRates WHERE EffectiveDate <= date('now') AND (EndDate IS NULL OR EndDate >= date('now'));",
        "SELECT t.TaxName, t.Rate, COUNT(ii.ItemID) AS InvoiceItemUsage, COUNT(bi.ItemID) AS BillItemUsage FROM TaxRates t LEFT JOIN InvoiceItems ii ON t.TaxRateID = ii.TaxRateID LEFT JOIN BillItems bi ON t.TaxRateID = bi.TaxRateID GROUP BY t.TaxRateID;"
    ]
}

TAX_RETURNS={
    "table_name": "TaxReturns",
    "description": "Records tax return filings",
    "purpose": "Tax compliance and reporting",
    "columns": [
        {"name": "ReturnID", "type": "INTEGER", "description": "Primary key identifier for each tax return", "is_primary": true, "is_foreign": false, "is_required": true},
        {"name": "ReturnType", "type": "TEXT", "description": "Type of tax return.Here are the names :-Sales Tax,Income Tax,VAT.", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "PeriodStart", "type": "TEXT", "description": "Start of tax period in ISO date format", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "PeriodEnd", "type": "TEXT", "description": "End of tax period in ISO date format", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "DueDate", "type": "TEXT", "description": "Filing due date in ISO date format", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "FiledDate", "type": "TEXT", "description": "Actual filing date in ISO date format", "is_primary": false, "is_foreign": false, "is_required": false},
        {"name": "TaxableAmount", "type": "REAL", "description": "Total taxable amount reported", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "TaxAmount", "type": "REAL", "description": "Total tax amount reported/paid", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "Status", "type": "TEXT", "description": "Pending, Filed, Amended, Audited, In Preparation", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "Notes", "type": "TEXT", "description": "Additional information", "is_primary": false, "is_foreign": false, "is_required": false},
        {"name": "PreparedBy", "type": "INTEGER", "description": "Foreign key to Users table", "is_primary": false, "is_foreign": true, "references": "Users.UserID", "is_required": true}
    ],
    "relationships": [
        {"related_table": "Users", "type": "many_to_one", "via_column": "PreparedBy", "description": "Each tax return is prepared by exactly one user"}
    ],
    "common_queries": [
        "SELECT * FROM TaxReturns WHERE Status = 'Pending' AND DueDate <= date('now', '+30 days') ORDER BY DueDate;",
        "SELECT ReturnType, COUNT(*) AS ReturnCount, SUM(TaxAmount) AS TotalTax FROM TaxReturns WHERE PeriodStart >= date('now', '-1 year') GROUP BY ReturnType;",
        "SELECT t.*, u.FullName AS PreparedByName FROM TaxReturns t JOIN Users u ON t.PreparedBy = u.UserID ORDER BY t.FiledDate DESC;"
    ]
}

# --- Budgeting ---
BUDGETS={
    "table_name": "Budgets",
    "description": "Defines financial budgets",
    "purpose": "Financial planning and variance analysis",
    "columns": [
        {"name": "BudgetID", "type": "INTEGER", "description": "Primary key identifier for each budget", "is_primary": true, "is_foreign": false, "is_required": true},
        {"name": "BudgetName", "type": "TEXT", "description": "Name of budget.Naming convention is _ Budget Year.such as:- Operations Budget 2025,ales Department Budget 2024", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "FiscalYearID", "type": "INTEGER", "description": "Foreign key to FiscalYears table", "is_primary": false, "is_foreign": true, "references": "FiscalYears.FiscalYearID", "is_required": true},
        {"name": "DepartmentID", "type": "INTEGER", "description": "Foreign key to Departments table (can be NULL for company-wide budget)", "is_primary": false, "is_foreign": true, "references": "Departments.DepartmentID", "is_required": false},
        {"name": "Status", "type": "TEXT", "description": "status are: Draft, Approved, refused , Closed , pending,", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "TotalAmount", "type": "REAL", "description": "Total budget amount (often calculated from items)", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "CreatedBy", "type": "INTEGER", "description": "Foreign key to Users table", "is_primary": false, "is_foreign": true, "references": "Users.UserID", "is_required": true},
        {"name": "CreationDate", "type": "TEXT", "description": "When budget was created in ISO date format", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "ApprovedBy", "type": "INTEGER", "description": "Foreign key to Users table", "is_primary": false, "is_foreign": true, "references": "Users.UserID", "is_required": false},
        {"name": "ApprovalDate", "type": "TEXT", "description": "When budget was approved in ISO date format", "is_primary": false, "is_foreign": false, "is_required": false},
        {"name": "Notes", "type": "TEXT", "description": "Additional information", "is_primary": false, "is_foreign": false, "is_required": false}
    ],
    "relationships": [
        {"related_table": "FiscalYears", "type": "many_to_one", "via_column": "FiscalYearID", "description": "Each budget belongs to exactly one fiscal year"},
        {"related_table": "Departments", "type": "many_to_one", "via_column": "DepartmentID", "description": "Each budget may belong to one department"},
        {"related_table": "Users", "type": "many_to_one", "via_column": "CreatedBy", "description": "Each budget is created by exactly one user"},
        {"related_table": "Users", "type": "many_to_one", "via_column": "ApprovedBy", "description": "Each budget may be approved by exactly one user"},
        {"related_table": "BudgetItems", "type": "one_to_many", "via_column": "BudgetID", "via_related": "BudgetID", "description": "Budgets contain multiple budget items"}
    ],
    "common_queries": [
        "SELECT * FROM Budgets WHERE FiscalYearID = (SELECT FiscalYearID FROM FiscalYears WHERE IsCurrent = 1) ORDER BY DepartmentID;",
        "SELECT b.BudgetName, d.DepartmentName, b.TotalAmount, b.Status FROM Budgets b LEFT JOIN Departments d ON b.DepartmentID = d.DepartmentID ORDER BY d.DepartmentName;",
        "SELECT b.*, SUM(bi.Amount) AS CalculatedTotalAmount FROM Budgets b LEFT JOIN BudgetItems bi ON b.BudgetID = bi.BudgetID GROUP BY b.BudgetID;" # Compare CalculatedTotalAmount with TotalAmount
    ]
}

BUDGET_ITEMS={
    "table_name": "BudgetItems",
    "description": "Individual budget allocations by account and period",
    "purpose": "Detailed budget planning and tracking",
    "columns": [
        {"name": "ItemID", "type": "INTEGER", "description": "Primary key identifier for each budget item", "is_primary": true, "is_foreign": false, "is_required": true},
        {"name": "BudgetID", "type": "INTEGER", "description": "Foreign key to Budgets table", "is_primary": false, "is_foreign": true, "references": "Budgets.BudgetID", "is_required": true},
        {"name": "AccountID", "type": "INTEGER", "description": "Foreign key to ChartOfAccounts table", "is_primary": false, "is_foreign": true, "references": "ChartOfAccounts.AccountID", "is_required": true},
        {"name": "PeriodID", "type": "INTEGER", "description": "Foreign key to FiscalPeriods table", "is_primary": false, "is_foreign": true, "references": "FiscalPeriods.PeriodID", "is_required": true},
        {"name": "Amount", "type": "REAL", "description": "Budgeted amount for this account and period", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "Description", "type": "TEXT", "description": "Item description", "is_primary": false, "is_foreign": false, "is_required": false}
    ],
    "relationships": [
        {"related_table": "Budgets", "type": "many_to_one", "via_column": "BudgetID", "description": "Each budget item belongs to exactly one budget"},
        {"related_table": "ChartOfAccounts", "type": "many_to_one", "via_column": "AccountID", "description": "Each budget item affects exactly one account"},
        {"related_table": "FiscalPeriods", "type": "many_to_one", "via_column": "PeriodID", "description": "Each budget item is allocated to exactly one fiscal period"}
    ],
    "common_queries": [
        "SELECT * FROM BudgetItems WHERE BudgetID = ?;",
        "SELECT bi.*, coa.AccountName, fp.StartDate, fp.EndDate FROM BudgetItems bi JOIN ChartOfAccounts coa ON bi.AccountID = coa.AccountID JOIN FiscalPeriods fp ON bi.PeriodID = fp.PeriodID WHERE bi.BudgetID = ?;",
        "SELECT coa.AccountName, SUM(bi.Amount) AS TotalBudgeted FROM BudgetItems bi JOIN ChartOfAccounts coa ON bi.AccountID = coa.AccountID WHERE bi.BudgetID = ? GROUP BY bi.AccountID;"
    ]
}

# --- Financial Reporting ---
FINANCIAL_REPORTS={
    "table_name": "FinancialReports",
    "description": "Stores generated financial reports",
    "purpose": "Financial reporting and analysis",
    "columns": [
        {"name": "ReportID", "type": "INTEGER", "description": "Primary key identifier for each report", "is_primary": true, "is_foreign": false, "is_required": true},
        {"name": "ReportName", "type": "TEXT", "description": "Name of report.Naming convention is Q_ Year name.such as:-Q1 2025 Balance Sheet,Q1 2024 Income Statement.", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "ReportType", "type": "TEXT", "description": "Type of report (e.g., Balance Sheet, Income Statement, Cash Flow Statement, Trial Balance)", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "FiscalYearID", "type": "INTEGER", "description": "Foreign key to FiscalYears table", "is_primary": false, "is_foreign": true, "references": "FiscalYears.FiscalYearID", "is_required": true},
        {"name": "PeriodID", "type": "INTEGER", "description": "Foreign key to FiscalPeriods table (optional, for periodic reports)", "is_primary": false, "is_foreign": true, "references": "FiscalPeriods.PeriodID", "is_required": false},
        {"name": "StartDate", "type": "TEXT", "description": "Report period start date in ISO date format", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "EndDate", "type": "TEXT", "description": "Report period end date in ISO date format", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "GeneratedBy", "type": "INTEGER", "description": "Foreign key to Users table", "is_primary": false, "is_foreign": true, "references": "Users.UserID", "is_required": true},
        {"name": "GenerationDate", "type": "TEXT", "description": "When report was generated in ISO date format", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "ReportData", "type": "TEXT", "description": "Report data in JSON format. It contains structured key-value pairs specific to each report type. For example, an Income Statement may include keys like revenue and expenses, while a Balance Sheet includes assets, liabilities, and equity. The variable naming convention inside the JSON follows camelCase (e.g., operatingCashFlow, investingCashFlow).", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "Notes", "type": "TEXT", "description": "Additional information", "is_primary": false, "is_foreign": false, "is_required": false}
    ],
    "relationships": [
        {"related_table": "FiscalYears", "type": "many_to_one", "via_column": "FiscalYearID", "description": "Each report belongs to exactly one fiscal year"},
        {"related_table": "FiscalPeriods", "type": "many_to_one", "via_column": "PeriodID", "description": "Each report can belong to exactly one fiscal period"},
        {"related_table": "Users", "type": "many_to_one", "via_column": "GeneratedBy", "description": "Each report is generated by exactly one user"}
    ],
    "common_queries": [
        "SELECT * FROM FinancialReports WHERE FiscalYearID = (SELECT FiscalYearID FROM FiscalYears WHERE IsCurrent = 1) ORDER BY GenerationDate DESC;",
        "SELECT fr.ReportName, fr.ReportType, fr.StartDate, fr.EndDate, u.FullName AS GeneratedByName FROM FinancialReports fr JOIN Users u ON fr.GeneratedBy = u.UserID ORDER BY fr.GenerationDate DESC LIMIT 50;",
        "SELECT ReportType, COUNT(*) AS ReportCount FROM FinancialReports WHERE GenerationDate >= date('now', '-1 year') GROUP BY ReportType;"
    ]
}

# --- Approval Management ---
APPROVAL_WORKFLOWS={
    "table_name": "ApprovalWorkflows",
    "description": "Defines approval processes for various transactions",
    "purpose": "Transaction approval management and control",
    "columns": [
        {"name": "WorkflowID", "type": "INTEGER", "description": "Primary key identifier for each workflow", "is_primary": true, "is_foreign": false, "is_required": true},
        {"name": "WorkflowName", "type": "TEXT", "description": "Name of workflow.Naming convention is  __ Approval. Here are the workflow:-Purchase Order Approval,Expense Approval,Budget Approval,Bill Approval,Invoice Approval.", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "EntityType", "type": "TEXT", "description": "Type of entity being approved (e.g., Bill, Invoice, Purchase Order, ExpenseReport, Budget)", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "Description", "type": "TEXT", "description": "Workflow description", "is_primary": false, "is_foreign": false, "is_required": false},
        {"name": "IsActive", "type": "INTEGER", "description": "Whether workflow is active (1) or inactive (0)", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "IsDefault", "type": "INTEGER", "description": "Whether this is the default workflow for this entity type (1) or not (0)", "is_primary": false, "is_foreign": false, "is_required": true}
    ],
    "relationships": [
        {"related_table": "ApprovalSteps", "type": "one_to_many", "via_column": "WorkflowID", "via_related": "WorkflowID", "description": "Workflows contain multiple approval steps"}
    ],
    "common_queries": [
        "SELECT * FROM ApprovalWorkflows WHERE IsActive = 1 ORDER BY WorkflowName;",
        "SELECT aw.*, COUNT(astep.StepID) AS StepCount FROM ApprovalWorkflows aw LEFT JOIN ApprovalSteps astep ON aw.WorkflowID = astep.WorkflowID GROUP BY aw.WorkflowID;",
        "SELECT EntityType, COUNT(*) AS WorkflowCount FROM ApprovalWorkflows WHERE IsActive = 1 GROUP BY EntityType;"
    ]
}

APPROVAL_STEPS={
    "table_name": "ApprovalSteps",
    "description": "Defines steps within approval workflows",
    "purpose": "Multi-level approval process configuration",
    "columns": [
        {"name": "StepID", "type": "INTEGER", "description": "Primary key identifier for each step", "is_primary": true, "is_foreign": false, "is_required": true},
        {"name": "WorkflowID", "type": "INTEGER", "description": "Foreign key to ApprovalWorkflows table", "is_primary": false, "is_foreign": true, "references": "ApprovalWorkflows.WorkflowID", "is_required": true},
        {"name": "StepNumber", "type": "INTEGER", "description": "Sequential step number within workflow", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "StepName", "type": "TEXT", "description": "Name of step.Here are the names:-Department Review, Financial Review, Executive Approval, AP Specialist Review, Controller Review, CFO Approval, Department Manager, CFO Review, CEO Final Approval, Manager Approval, Finance Review, Department Approval, Financial Review, Executive Approval.", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "ApproverPositionID", "type": "INTEGER", "description": "Foreign key to Positions table", "is_primary": false, "is_foreign": true, "references": "Positions.PositionID", "is_required": true},
        {"name": "ApprovalThreshold", "type": "REAL", "description": "Minimum amount threshold requiring this approval step (optional)", "is_primary": false, "is_foreign": false, "is_required": false},
        {"name": "Description", "type": "TEXT", "description": "Step description", "is_primary": false, "is_foreign": false, "is_required": false}
    ],
    "relationships": [
        {"related_table": "ApprovalWorkflows", "type": "many_to_one", "via_column": "WorkflowID", "description": "Each step belongs to exactly one workflow"},
        {"related_table": "Positions", "type": "many_to_one", "via_column": "ApproverPositionID", "description": "Each step requires approval from a specific position"}
    ],
    "common_queries": [
        "SELECT * FROM ApprovalSteps WHERE WorkflowID = ? ORDER BY StepNumber;",
        "SELECT astep.*, p.PositionTitle FROM ApprovalSteps astep JOIN Positions p ON astep.ApproverPositionID = p.PositionID ORDER BY astep.WorkflowID, astep.StepNumber;",
        "SELECT aw.WorkflowName, astep.StepName, astep.StepNumber, p.PositionTitle FROM ApprovalSteps astep JOIN ApprovalWorkflows aw ON astep.WorkflowID = aw.WorkflowID JOIN Positions p ON astep.ApproverPositionID = p.PositionID ORDER BY aw.WorkflowName, astep.StepNumber;"
    ]
}

# --- Audit & Compliance ---
AUDIT_LOGS={
    "table_name": "AuditLogs",
    "description": "Records system activity for audit purposes",
    "purpose": "Compliance, security, and change tracking",
    "columns": [
        {"name": "LogID", "type": "INTEGER", "description": "Primary key identifier for each log entry", "is_primary": true, "is_foreign": false, "is_required": true},
        {"name": "LogDate", "type": "TEXT", "description": "Date and time of event in ISO format with time", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "UserID", "type": "INTEGER", "description": "Foreign key to Users table (who performed the action)", "is_primary": false, "is_foreign": true, "references": "Users.UserID", "is_required": true},
        {"name": "Action", "type": "TEXT", "description":"Type of action performed.(e.g.,Update, Create, Delete, Login, Logout, Approve, Reject, Generate, View)", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "EntityType", "type": "TEXT", "description":"Type of entity affected (e.g., table name like 'Invoices', 'Users')", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "EntityID", "type": "INTEGER", "description":"ID of the affected entity record", "is_primary": false, "is_foreign": false, "is_required": false},
        {"name": "Description", "type": "TEXT", "description": "Detailed description of action (e.g., 'Updated Invoice #INV-100 status to Paid')", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "OldValue", "type": "TEXT", "description":"Previous value(s) in JSON format (if applicable, for updates)", "is_primary": false, "is_foreign": false, "is_required": false},
        {"name": "NewValue", "type": "TEXT", "description":"New value(s) in JSON format (if applicable, for updates/creates)", "is_primary": false, "is_foreign": false, "is_required": false},
        {"name": "IPAddress", "type": "TEXT", "description":"IP address of user performing the action", "is_primary": false, "is_foreign": false, "is_required": false}
    ],
    "relationships": [
        {"related_table": "Users", "type": "many_to_one", "via_column": "UserID", "description": "Each log entry is associated with exactly one user"}
    ],
    "common_queries": [
        "SELECT * FROM AuditLogs ORDER BY LogDate DESC LIMIT 100;",
        "SELECT al.*, u.Username FROM AuditLogs al JOIN Users u ON al.UserID = u.UserID WHERE al.LogDate >= date('now', '-7 days') ORDER BY al.LogDate DESC;",
        "SELECT Action, COUNT(*) AS ActionCount FROM AuditLogs WHERE LogDate >= date('now', '-30 days') GROUP BY Action ORDER BY ActionCount DESC;"
    ]
}

# --- Asset Management ---
FIXED_ASSETS={
    "table_name": "FixedAssets",
    "description": "Tracks company-owned fixed assets and their depreciation",
    "purpose": "Asset tracking, depreciation calculation, and financial reporting",
    "columns": [
        {"name": "AssetID", "type": "INTEGER", "description": "Primary key identifier for each asset", "is_primary": true, "is_foreign": false, "is_required": true},
        {"name": "AssetName", "type": "TEXT", "description": "Name or description of the asset", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "AssetTag", "type": "TEXT", "description": "Unique physical tag number for the asset (optional)", "is_primary": false, "is_foreign": false, "is_required": false, "is_unique": true},
        {"name": "PurchaseDate", "type": "TEXT", "description": "Date when asset was purchased in ISO format", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "PurchaseCost", "type": "REAL", "description": "Original cost of the asset", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "SalvageValue", "type": "REAL", "description": "Estimated residual value at the end of useful life", "is_primary": false, "is_foreign": false, "is_required": true, "default_value": 0},
        {"name": "DepreciationMethod", "type": "TEXT", "description": "Method used for calculating depreciation (e.g., Straight-line, Declining Balance, Sum-of-Years-Digits)", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "UsefulLife", "type": "INTEGER", "description": "Expected useful life of asset in years or months (specify unit)", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "DepreciationStartDate", "type": "TEXT", "description": "Date depreciation calculation begins in ISO format", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "AccumulatedDepreciation", "type": "REAL", "description": "Total depreciation recorded to date", "is_primary": false, "is_foreign": false, "is_required": true, "default_value": 0},
        {"name": "CurrentValue", "type": "REAL", "description": "Current book value (PurchaseCost - AccumulatedDepreciation)", "is_primary": false, "is_foreign": false, "is_required": true}, # This should be calculated
        {"name": "AssetAccountID", "type": "INTEGER", "description": "Foreign key to the ChartOfAccounts table (e.g., Machinery, Buildings)", "is_primary": false, "is_foreign": true, "references": "ChartOfAccounts.AccountID", "is_required": true},
        {"name": "AccumDeprAccountID", "type": "INTEGER", "description": "Foreign key to the ChartOfAccounts table (e.g., Accumulated Depreciation - Machinery)", "is_primary": false, "is_foreign": true, "references": "ChartOfAccounts.AccountID", "is_required": true},
        {"name": "DeprExpenseAccountID", "type": "INTEGER", "description": "Foreign key to the ChartOfAccounts table (e.g., Depreciation Expense)", "is_primary": false, "is_foreign": true, "references": "ChartOfAccounts.AccountID", "is_required": true},
        {"name": "Status", "type": "TEXT", "description": "Status of the asset (e.g., Active, Disposed, Sold)", "is_primary": false, "is_foreign": false, "is_required": true, "default_value": "Active"},
        {"name": "DisposalDate", "type": "TEXT", "description": "Date asset was disposed or sold in ISO format", "is_primary": false, "is_foreign": false, "is_required": false},
        {"name": "DisposalPrice", "type": "REAL", "description": "Amount received upon disposal/sale", "is_primary": false, "is_foreign": false, "is_required": false}
    ],
    "relationships": [
        {"related_table": "ChartOfAccounts", "type": "many_to_one", "via_column": "AssetAccountID", "description": "Each asset is associated with exactly one asset account"},
        {"related_table": "ChartOfAccounts", "type": "many_to_one", "via_column": "AccumDeprAccountID", "description": "Each asset is associated with exactly one accumulated depreciation account"},
        {"related_table": "ChartOfAccounts", "type": "many_to_one", "via_column": "DeprExpenseAccountID", "description": "Each asset is associated with exactly one depreciation expense account"}
    ],
    "common_queries": [
        "SELECT * FROM FixedAssets WHERE Status = 'Active' ORDER BY PurchaseDate DESC;",
        "SELECT AssetName, PurchaseCost, AccumulatedDepreciation, (PurchaseCost - AccumulatedDepreciation) AS BookValue FROM FixedAssets WHERE Status = 'Active';",
        "SELECT fa.AssetName, fa.PurchaseCost, fa.AccumulatedDepreciation, coa.AccountName as AssetAccount FROM FixedAssets fa JOIN ChartOfAccounts coa ON fa.AssetAccountID = coa.AccountID WHERE fa.Status = 'Active';"
    ]
}

# --- Product/Service Management ---
PRODUCTS={
    "table_name": "Products",
    "description": "Company's product and service catalog",
    "purpose": "Product management for sales and invoice creation",
    "columns": [
        {"name": "ProductID", "type": "INTEGER", "description": "Primary key identifier for each product", "is_primary": true, "is_foreign": false, "is_required": true},
        {"name": "ProductSKU", "type": "TEXT", "description": "Unique Stock Keeping Unit or product code", "is_primary": false, "is_foreign": false, "is_required": false, "is_unique": true},
        {"name": "ProductName", "type": "TEXT", "description": "Name of the product or service", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "Description", "type": "TEXT", "description": "Detailed description of the product", "is_primary": false, "is_foreign": false, "is_required": false},
        {"name": "UnitPrice", "type": "REAL", "description": "Standard selling price per unit", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "IsActive", "type": "INTEGER", "description": "Boolean flag (1=active, 0=inactive)", "is_primary": false, "is_foreign": false, "is_required": true}
    ],
    "relationships": [
         {"related_table": "InvoiceItems", "type": "one_to_many", "via_column": "ProductID", "via_related": "ProductID", "description": "Products can appear on multiple invoice line items"},
         {"related_table": "InventoryItems", "type": "one_to_many", "via_column": "ProductID", "via_related": "ProductID", "description": "Products that are inventory items link here"}
    ],
    "common_queries": [
        "SELECT * FROM Products WHERE IsActive = 1 ORDER BY ProductName;",
        "SELECT ProductName, UnitPrice FROM Products WHERE IsActive = 1 AND UnitPrice > 100;",
        "SELECT COUNT(*) FROM Products WHERE IsActive = 1;"
    ]
}

# --- Inventory Management ---
WAREHOUSES={
    "table_name": "Warehouses",
    "description": "Defines physical locations where inventory is stored",
    "purpose": "Inventory location tracking",
    "columns": [
        {"name": "WarehouseID", "type": "INTEGER", "description": "Primary key identifier for each warehouse/location", "is_primary": true, "is_foreign": false, "is_required": true},
        {"name": "WarehouseName", "type": "TEXT", "description": "Name of the warehouse or location", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "Address", "type": "TEXT", "description": "Physical address of the warehouse", "is_primary": false, "is_foreign": false, "is_required": false},
        {"name": "IsActive", "type": "INTEGER", "description": "Whether the warehouse is currently active (1) or inactive (0)", "is_primary": false, "is_foreign": false, "is_required": true, "default_value": 1}
    ],
    "relationships": [
        {"related_table": "StockMovements", "type": "one_to_many", "via_column": "WarehouseID", "via_related": "WarehouseID", "description": "Warehouses are involved in stock movements"}
    ],
    "common_queries": [
        "SELECT * FROM Warehouses WHERE IsActive = 1;",
        "SELECT WarehouseName FROM Warehouses ORDER BY WarehouseName;"
    ]
}

INVENTORY_ITEMS={
    "table_name": "InventoryItems",
    "description": "Defines specific items tracked in inventory",
    "purpose": "Cataloging inventory items, linking to products, and defining accounting details",
    "columns": [
        {"name": "ItemID", "type": "INTEGER", "description": "Primary key identifier for each inventory item", "is_primary": true, "is_foreign": false, "is_required": true},
        {"name": "ProductID", "type": "INTEGER", "description": "Foreign key to the Products table (links inventory item to a sellable product)", "is_primary": false, "is_foreign": true, "references": "Products.ProductID", "is_required": true},
        {"name": "ItemSKU", "type": "TEXT", "description": "Unique Stock Keeping Unit for the inventory item", "is_primary": false, "is_foreign": false, "is_required": true, "is_unique": true},
        {"name": "ItemName", "type": "TEXT", "description": "Name of the inventory item", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "Description", "type": "TEXT", "description": "Detailed description of the inventory item", "is_primary": false, "is_foreign": false, "is_required": false},
        {"name": "UnitOfMeasure", "type": "TEXT", "description": "Unit used for tracking (e.g., Each, Kg, Box, Litre)", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "StandardCost", "type": "REAL", "description": "Standard or average cost per unit (actual costing method applied during COGS calculation)", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "InventoryAssetAccountID", "type": "INTEGER", "description": "FK to ChartOfAccounts for the Inventory Asset account", "is_primary": false, "is_foreign": true, "references": "ChartOfAccounts.AccountID", "is_required": true},
        {"name": "COGSAccountID", "type": "INTEGER", "description": "FK to ChartOfAccounts for the Cost of Goods Sold expense account", "is_primary": false, "is_foreign": true, "references": "ChartOfAccounts.AccountID", "is_required": true},
        {"name": "ReorderPoint", "type": "REAL", "description": "Minimum quantity level that triggers reordering", "is_primary": false, "is_foreign": false, "is_required": false},
        {"name": "PreferredVendorID", "type": "INTEGER", "description": "FK to Vendors table for the preferred supplier (optional)", "is_primary": false, "is_foreign": true, "references": "Vendors.VendorID", "is_required": false},
        {"name": "IsTracked", "type": "INTEGER", "description": "Whether inventory levels are actively tracked for this item (1=Yes, 0=No)", "is_primary": false, "is_foreign": false, "is_required": true, "default_value": 1}
    ],
    "relationships": [
        {"related_table": "Products", "type": "many_to_one", "via_column": "ProductID", "description": "Each inventory item corresponds to one product"},
        {"related_table": "ChartOfAccounts", "type": "many_to_one", "via_column": "InventoryAssetAccountID", "description": "Inventory value is tracked in this asset account"},
        {"related_table": "ChartOfAccounts", "type": "many_to_one", "via_column": "COGSAccountID", "description": "Cost of sold items is expensed to this account"},
        {"related_table": "Vendors", "type": "many_to_one", "via_column": "PreferredVendorID", "description": "Optional link to a preferred vendor"},
        {"related_table": "StockMovements", "type": "one_to_many", "via_column": "ItemID", "via_related": "ItemID", "description": "Inventory items are subject to stock movements"}
    ],
    "common_queries": [
        "SELECT * FROM InventoryItems WHERE IsTracked = 1 ORDER BY ItemName;",
        "SELECT ii.ItemName, ii.ItemSKU, p.ProductName FROM InventoryItems ii JOIN Products p ON ii.ProductID = p.ProductID;",
        "SELECT ii.ItemID, ii.ItemName, ii.ItemSKU, (SELECT SUM(sm.QuantityChange) FROM StockMovements sm WHERE sm.ItemID = ii.ItemID) AS QuantityOnHand FROM InventoryItems ii WHERE ii.IsTracked = 1;"
    ]
}

STOCK_MOVEMENTS={
    "table_name": "StockMovements",
    "description": "Records every change in inventory quantity for tracked items",
    "purpose": "Provides an audit trail for inventory changes and basis for quantity calculations",
    "columns": [
        {"name": "MovementID", "type": "INTEGER", "description": "Primary key identifier for each stock movement", "is_primary": true, "is_foreign": false, "is_required": true},
        {"name": "ItemID", "type": "INTEGER", "description": "Foreign key to the InventoryItems table", "is_primary": false, "is_foreign": true, "references": "InventoryItems.ItemID", "is_required": true},
        {"name": "MovementDate", "type": "TEXT", "description": "Date and time the movement occurred in ISO format", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "MovementType", "type": "TEXT", "description": "Type of movement (e.g., Purchase, Sale, Adjustment-In, Adjustment-Out, Transfer-In, Transfer-Out)", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "QuantityChange", "type": "REAL", "description": "Change in quantity (positive for increases, negative for decreases)", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "UnitCost", "type": "REAL", "description": "Cost per unit for this specific movement (crucial for costing methods)", "is_primary": false, "is_foreign": false, "is_required": false},
        {"name": "WarehouseID", "type": "INTEGER", "description": "Foreign key to Warehouses table indicating location of movement", "is_primary": false, "is_foreign": true, "references": "Warehouses.WarehouseID", "is_required": true},
        {"name": "RelatedDocumentType", "type": "TEXT", "description": "Type of related document (e.g., Bill, Invoice, AdjustmentNote)", "is_primary": false, "is_foreign": false, "is_required": false},
        {"name": "RelatedDocumentID", "type": "INTEGER", "description": "ID of the related document (e.g., BillID, InvoiceID)", "is_primary": false, "is_foreign": false, "is_required": false},
        {"name": "RelatedDocumentItemID", "type": "INTEGER", "description": "ID of the specific line item in the related document (e.g., BillItemID, InvoiceItemID)", "is_primary": false, "is_foreign": false, "is_required": false},
        {"name": "Notes", "type": "TEXT", "description": "Optional notes explaining the movement (especially for adjustments)", "is_primary": false, "is_foreign": false, "is_required": false}
    ],
     "indexes": [
        {"name": "idx_stockmovements_item_date", "columns": ["ItemID", "MovementDate"], "is_unique": false}
    ],
    "relationships": [
        {"related_table": "InventoryItems", "type": "many_to_one", "via_column": "ItemID", "description": "Each movement affects one inventory item"},
        {"related_table": "Warehouses", "type": "many_to_one", "via_column": "WarehouseID", "description": "Each movement occurs at one warehouse"},
        {"related_table": "CostOfGoodsSoldLog", "type": "one_to_many", "via_column": "MovementID", "via_related": "StockMovementID", "description": "Sale movements link to COGS log entries"}
        // Note: Polymorphic link via RelatedDocumentID/RelatedDocumentType to Bills, Invoices, etc.
    ],
    "common_queries": [
        "SELECT * FROM StockMovements WHERE ItemID = ? ORDER BY MovementDate DESC;",
        "SELECT ItemID, WarehouseID, SUM(QuantityChange) AS QuantityOnHand FROM StockMovements GROUP BY ItemID, WarehouseID;",
        "SELECT sm.*, ii.ItemName FROM StockMovements sm JOIN InventoryItems ii ON sm.ItemID = ii.ItemID WHERE sm.MovementDate >= date('now', '-30 days') ORDER BY sm.MovementDate DESC;"
    ]
}

COST_OF_GOODS_SOLD_LOG={
    "table_name": "CostOfGoodsSoldLog",
    "description": "Records the calculated cost of goods sold for each sales transaction line item",
    "purpose": "Tracks COGS expense for financial reporting and generates related GL entries",
    "columns": [
        {"name": "COGSLogID", "type": "INTEGER", "description": "Primary key identifier for each COGS entry", "is_primary": true, "is_foreign": false, "is_required": true},
        {"name": "InvoiceItemID", "type": "INTEGER", "description": "FK to the specific InvoiceItems line that triggered the sale", "is_primary": false, "is_foreign": true, "references": "InvoiceItems.ItemID", "is_required": true},
        {"name": "StockMovementID", "type": "INTEGER", "description": "FK to the corresponding 'Sale' type StockMovements entry", "is_primary": false, "is_foreign": true, "references": "StockMovements.MovementID", "is_required": true, "is_unique": true}, # Should be 1-to-1 with sale movement
        {"name": "LogDate", "type": "TEXT", "description": "Date the COGS was calculated and logged in ISO format", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "QuantitySold", "type": "REAL", "description": "Quantity of the item sold in this transaction line", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "UnitCost", "type": "REAL", "description": "Calculated cost per unit based on costing method (FIFO, LIFO, Avg, etc.)", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "TotalCOGS", "type": "REAL", "description": "Total Cost of Goods Sold for this line (QuantitySold * UnitCost)", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "CostingMethodUsed", "type": "TEXT", "description": "Identifier for the costing method applied (e.g., FIFO, AVG)", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "DebitGLEntryID", "type": "INTEGER", "description": "FK to the GeneralLedger entry debiting COGS Expense", "is_primary": false, "is_foreign": true, "references": "GeneralLedger.EntryID", "is_required": false},
        {"name": "CreditGLEntryID", "type": "INTEGER", "description": "FK to the GeneralLedger entry crediting Inventory Asset", "is_primary": false, "is_foreign": true, "references": "GeneralLedger.EntryID", "is_required": false}
    ],
    "relationships": [
        {"related_table": "InvoiceItems", "type": "many_to_one", "via_column": "InvoiceItemID", "description": "Each COGS log entry corresponds to one invoice line item"},
        {"related_table": "StockMovements", "type": "one_to_one", "via_column": "StockMovementID", "description": "Each COGS log entry corresponds to one sales stock movement"},
        {"related_table": "GeneralLedger", "type": "many_to_one", "via_column": "DebitGLEntryID", "description": "Links COGS log to the debit side of its GL journal entry"},
        {"related_table": "GeneralLedger", "type": "many_to_one", "via_column": "CreditGLEntryID", "description": "Links COGS log to the credit side of its GL journal entry"}
    ],
    "common_queries": [
        "SELECT * FROM CostOfGoodsSoldLog WHERE InvoiceItemID = ?;",
        "SELECT cogs.*, ii.Description FROM CostOfGoodsSoldLog cogs JOIN InvoiceItems ii ON cogs.InvoiceItemID = ii.ItemID ORDER BY cogs.LogDate DESC;",
        "SELECT SUM(TotalCOGS) FROM CostOfGoodsSoldLog WHERE LogDate BETWEEN ? AND ?;"
    ]
}

# --- Payroll Management ---
EMPLOYEES_PAYROLL_INFO={
    "table_name": "EmployeesPayrollInfo",
    "description": "Stores payroll-specific information for employees (linked to Users)",
    "purpose": "Central repository for employee pay rates, tax details, and bank information for payroll processing",
    "columns": [
        {"name": "EmployeeInfoID", "type": "INTEGER", "description": "Primary key identifier", "is_primary": true, "is_foreign": false, "is_required": true},
        {"name": "UserID", "type": "INTEGER", "description": "Foreign key to the Users table (establishes link to employee user record)", "is_primary": false, "is_foreign": true, "references": "Users.UserID", "is_required": true, "is_unique": true},
        {"name": "EmployeeNumber", "type": "TEXT", "description": "Unique employee identification number", "is_primary": false, "is_foreign": false, "is_required": false, "is_unique": true},
        {"name": "HireDate", "type": "TEXT", "description": "Date the employee was hired in ISO format", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "TerminationDate", "type": "TEXT", "description": "Date the employee's employment ended in ISO format (optional)", "is_primary": false, "is_foreign": false, "is_required": false},
        {"name": "EmploymentType", "type": "TEXT", "description": "Full-time, Part-time, Contractor, etc.", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "PayType", "type": "TEXT", "description": "Salary or Hourly", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "SalaryAmount", "type": "REAL", "description": "Annual salary amount (if PayType is Salary)", "is_primary": false, "is_foreign": false, "is_required": false},
        {"name": "HourlyRate", "type": "REAL", "description": "Rate per hour (if PayType is Hourly)", "is_primary": false, "is_foreign": false, "is_required": false},
        {"name": "PayFrequency", "type": "TEXT", "description": "How often the employee is paid (e.g., Weekly, Bi-Weekly, Semi-Monthly, Monthly)", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "SSN_TIN_Hash", "type": "TEXT", "description": "Securely hashed Social Security Number or Tax ID (DO NOT STORE PLAINTEXT)", "is_primary": false, "is_foreign": false, "is_required": false},
        {"name": "FederalFilingStatus", "type": "TEXT", "description": "Federal tax filing status (e.g., Single, Married Filing Jointly)", "is_primary": false, "is_foreign": false, "is_required": false},
        {"name": "FederalAllowances", "type": "INTEGER", "description": "Number of federal tax allowances claimed", "is_primary": false, "is_foreign": false, "is_required": false},
        {"name": "StateFilingStatus", "type": "TEXT", "description": "State tax filing status", "is_primary": false, "is_foreign": false, "is_required": false},
        {"name": "StateAllowances", "type": "INTEGER", "description": "Number of state tax allowances claimed", "is_primary": false, "is_foreign": false, "is_required": false},
        {"name": "BankName", "type": "TEXT", "description": "Bank name for direct deposit", "is_primary": false, "is_foreign": false, "is_required": false},
        {"name": "BankRoutingNumber", "type": "TEXT", "description": "Bank routing number for direct deposit (encrypt)", "is_primary": false, "is_foreign": false, "is_required": false},
        {"name": "BankAccountNumber", "type": "TEXT", "description": "Bank account number for direct deposit (encrypt)", "is_primary": false, "is_foreign": false, "is_required": false},
        {"name": "DefaultSalaryExpenseAccountID", "type": "INTEGER", "description": "FK to ChartOfAccounts for the default salary/wage expense account", "is_primary": false, "is_foreign": true, "references": "ChartOfAccounts.AccountID", "is_required": false},
        {"name": "IsActive", "type": "INTEGER", "description": "Whether this payroll record is active (1) or inactive (0)", "is_primary": false, "is_foreign": false, "is_required": true, "default_value": 1}
    ],
    "relationships": [
        {"related_table": "Users", "type": "one_to_one", "via_column": "UserID", "description": "Each payroll info record belongs to exactly one user"},
        {"related_table": "ChartOfAccounts", "type": "many_to_one", "via_column": "DefaultSalaryExpenseAccountID", "description": "Links to the default expense account for this employee's pay"},
        {"related_table": "EmployeeDeductions", "type": "one_to_many", "via_column": "EmployeeInfoID", "via_related": "EmployeeInfoID", "description": "An employee can have multiple recurring deductions/benefits"},
        {"related_table": "Payslips", "type": "one_to_many", "via_column": "EmployeeInfoID", "via_related": "EmployeeInfoID", "description": "An employee receives multiple payslips"}
    ],
    "common_queries": [
        "SELECT * FROM EmployeesPayrollInfo WHERE IsActive = 1;",
        "SELECT epi.*, u.FullName FROM EmployeesPayrollInfo epi JOIN Users u ON epi.UserID = u.UserID WHERE epi.IsActive = 1;",
        "SELECT epi.EmployeeInfoID FROM EmployeesPayrollInfo epi WHERE epi.TerminationDate IS NULL AND epi.PayFrequency = ?;"
    ]
}

PAYROLL_DEDUCTION_TYPES={
    "table_name": "PayrollDeductionTypes",
    "description": "Defines the types of deductions or benefits applicable in payroll",
    "purpose": "Categorizes deductions for calculation and GL posting",
    "columns": [
        {"name": "DeductionTypeID", "type": "INTEGER", "description": "Primary key identifier", "is_primary": true, "is_foreign": false, "is_required": true},
        {"name": "DeductionName", "type": "TEXT", "description": "Name of the deduction/benefit (e.g., Federal Income Tax, Health Insurance Premium, 401k Contribution)", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "Category", "type": "TEXT", "description": "Category (e.g., Statutory Tax, Voluntary Deduction, Benefit Contribution, Employer Contribution)", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "CalculationType", "type": "TEXT", "description": "How it's calculated (e.g., Fixed Amount, Percentage of Gross, Tax Table Lookup)", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "LiabilityAccountID", "type": "INTEGER", "description": "FK to ChartOfAccounts for the liability account where withheld amounts are held", "is_primary": false, "is_foreign": true, "references": "ChartOfAccounts.AccountID", "is_required": false},
        {"name": "ExpenseAccountID", "type": "INTEGER", "description": "FK to ChartOfAccounts for employer contribution expense (e.g., Employer FICA Expense)", "is_primary": false, "is_foreign": true, "references": "ChartOfAccounts.AccountID", "is_required": false},
        {"name": "IsEmployerContribution", "type": "INTEGER", "description": "Flag indicating if this represents an employer cost (1) or employee withholding (0)", "is_primary": false, "is_foreign": false, "is_required": true, "default_value": 0}
     ],
    "relationships": [
        {"related_table": "ChartOfAccounts", "type": "many_to_one", "via_column": "LiabilityAccountID", "description": "Links deduction type to its liability account"},
        {"related_table": "ChartOfAccounts", "type": "many_to_one", "via_column": "ExpenseAccountID", "description": "Links employer contribution type to its expense account"},
        {"related_table": "EmployeeDeductions", "type": "one_to_many", "via_column": "DeductionTypeID", "via_related": "DeductionTypeID", "description": "A deduction type can be assigned to multiple employees"},
        {"related_table": "PayslipItems", "type": "one_to_many", "via_column": "DeductionTypeID", "via_related": "DeductionTypeID", "description": "Deduction types appear on payslip items"}
    ],
    "common_queries": [
        "SELECT * FROM PayrollDeductionTypes ORDER BY Category, DeductionName;",
        "SELECT DeductionName FROM PayrollDeductionTypes WHERE Category = 'Statutory Tax';"
    ]
}

EMPLOYEE_DEDUCTIONS={
    "table_name": "EmployeeDeductions",
    "description": "Assigns specific deduction types and amounts/rates to individual employees",
    "purpose": "Stores employee-specific recurring deduction settings",
    "columns": [
        {"name": "EmployeeDeductionID", "type": "INTEGER", "description": "Primary key identifier", "is_primary": true, "is_foreign": false, "is_required": true},
        {"name": "EmployeeInfoID", "type": "INTEGER", "description": "FK to EmployeesPayrollInfo table", "is_primary": false, "is_foreign": true, "references": "EmployeesPayrollInfo.EmployeeInfoID", "is_required": true},
        {"name": "DeductionTypeID", "type": "INTEGER", "description": "FK to PayrollDeductionTypes table", "is_primary": false, "is_foreign": true, "references": "PayrollDeductionTypes.DeductionTypeID", "is_required": true},
        {"name": "Amount", "type": "REAL", "description": "Fixed amount for the deduction (if applicable)", "is_primary": false, "is_foreign": false, "is_required": false},
        {"name": "Rate", "type": "REAL", "description": "Percentage rate for the deduction (if applicable, e.g., 0.05 for 5%)", "is_primary": false, "is_foreign": false, "is_required": false},
        {"name": "EffectiveStartDate", "type": "TEXT", "description": "Date the deduction setting becomes effective in ISO format", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "EffectiveEndDate", "type": "TEXT", "description": "Date the deduction setting expires in ISO format (optional)", "is_primary": false, "is_foreign": false, "is_required": false},
        {"name": "IsActive", "type": "INTEGER", "description": "Whether this specific assignment is active (1) or inactive (0)", "is_primary": false, "is_foreign": false, "is_required": true, "default_value": 1}
    ],
    "indexes": [
        {"name": "idx_empdeductions_emp_type", "columns": ["EmployeeInfoID", "DeductionTypeID"], "is_unique": false}
    ],
    "relationships": [
        {"related_table": "EmployeesPayrollInfo", "type": "many_to_one", "via_column": "EmployeeInfoID", "description": "Each deduction setting belongs to one employee"},
        {"related_table": "PayrollDeductionTypes", "type": "many_to_one", "via_column": "DeductionTypeID", "description": "Each deduction setting uses one deduction type"}
    ],
    "common_queries": [
        "SELECT * FROM EmployeeDeductions WHERE EmployeeInfoID = ? AND IsActive = 1 AND EffectiveStartDate <= date('now') AND (EffectiveEndDate IS NULL OR EffectiveEndDate >= date('now'));",
        "SELECT ed.*, pdt.DeductionName FROM EmployeeDeductions ed JOIN PayrollDeductionTypes pdt ON ed.DeductionTypeID = pdt.DeductionTypeID WHERE ed.EmployeeInfoID = ?;"
    ]
}

PAYROLL_RUNS={
    "table_name": "PayrollRuns",
    "description": "Represents a specific instance of processing payroll for a period",
    "purpose": "Groups payslips for a pay period and tracks overall status and GL posting",
    "columns": [
        {"name": "RunID", "type": "INTEGER", "description": "Primary key identifier for the payroll run", "is_primary": true, "is_foreign": false, "is_required": true},
        {"name": "RunIdentifier", "type": "TEXT", "description": "User-friendly identifier (e.g., PAY-2024-WK25)", "is_primary": false, "is_foreign": false, "is_required": false, "is_unique": true},
        {"name": "PayFrequency", "type": "TEXT", "description": "Pay frequency covered by this run (e.g., Weekly, Bi-Weekly)", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "PeriodStartDate", "type": "TEXT", "description": "Start date of the pay period covered in ISO format", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "PeriodEndDate", "type": "TEXT", "description": "End date of the pay period covered in ISO format", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "PaymentDate", "type": "TEXT", "description": "Date employees are paid for this run in ISO format", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "Status", "type": "TEXT", "description": "Status of the run (e.g., Pending, Calculated, Approved, Paid, PostedToGL, Error)", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "TotalGrossPay", "type": "REAL", "description": "Sum of gross pay for all payslips in the run", "is_primary": false, "is_foreign": false, "is_required": false},
        {"name": "TotalNetPay", "type": "REAL", "description": "Sum of net pay for all payslips in the run", "is_primary": false, "is_foreign": false, "is_required": false},
        {"name": "TotalTaxesWithheld", "type": "REAL", "description": "Sum of all employee taxes withheld", "is_primary": false, "is_foreign": false, "is_required": false},
        {"name": "TotalDeductionsWithheld", "type": "REAL", "description": "Sum of all non-tax employee deductions withheld", "is_primary": false, "is_foreign": false, "is_required": false},
        {"name": "TotalEmployerTaxes", "type": "REAL", "description": "Sum of employer payroll tax expenses", "is_primary": false, "is_foreign": false, "is_required": false},
        {"name": "TotalEmployerContributions", "type": "REAL", "description": "Sum of employer benefit contributions", "is_primary": false, "is_foreign": false, "is_required": false},
        {"name": "ProcessedBy", "type": "INTEGER", "description": "FK to Users table for who initiated/processed the run", "is_primary": false, "is_foreign": true, "references": "Users.UserID", "is_required": false},
        {"name": "ProcessedDate", "type": "TEXT", "description": "Date and time the run was processed", "is_primary": false, "is_foreign": false, "is_required": false},
        {"name": "JournalID", "type": "INTEGER", "description": "FK to GeneralLedger JournalID grouping all GL entries for this run (optional)", "is_primary": false, "is_foreign": false, "is_required": false}
    ],
    "relationships": [
        {"related_table": "Users", "type": "many_to_one", "via_column": "ProcessedBy", "description": "Identifies the user who processed the payroll run"},
        {"related_table": "Payslips", "type": "one_to_many", "via_column": "RunID", "via_related": "RunID", "description": "A payroll run contains multiple individual payslips"}
    ],
    "common_queries": [
        "SELECT * FROM PayrollRuns ORDER BY PaymentDate DESC;",
        "SELECT * FROM PayrollRuns WHERE Status = 'Pending';",
        "SELECT * FROM PayrollRuns WHERE PeriodEndDate BETWEEN ? AND ?;"
    ]
}

PAYSLIPS={
    "table_name": "Payslips",
    "description": "Represents an individual employee's pay details for a specific payroll run",
    "purpose": "Stores calculated pay components for each employee per pay period",
    "columns": [
        {"name": "PayslipID", "type": "INTEGER", "description": "Primary key identifier", "is_primary": true, "is_foreign": false, "is_required": true},
        {"name": "RunID", "type": "INTEGER", "description": "FK to the PayrollRuns table", "is_primary": false, "is_foreign": true, "references": "PayrollRuns.RunID", "is_required": true},
        {"name": "EmployeeInfoID", "type": "INTEGER", "description": "FK to the EmployeesPayrollInfo table", "is_primary": false, "is_foreign": true, "references": "EmployeesPayrollInfo.EmployeeInfoID", "is_required": true},
        {"name": "GrossPay", "type": "REAL", "description": "Total earnings before any deductions", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "TotalDeductions", "type": "REAL", "description": "Sum of all deductions (taxes + other)", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "NetPay", "type": "REAL", "description": "Take-home pay (GrossPay - TotalDeductions)", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "Notes", "type": "TEXT", "description": "Optional notes specific to this payslip", "is_primary": false, "is_foreign": false, "is_required": false}
    ],
    "relationships": [
        {"related_table": "PayrollRuns", "type": "many_to_one", "via_column": "RunID", "description": "Each payslip belongs to exactly one payroll run"},
        {"related_table": "EmployeesPayrollInfo", "type": "many_to_one", "via_column": "EmployeeInfoID", "description": "Each payslip belongs to exactly one employee"},
        {"related_table": "PayslipItems", "type": "one_to_many", "via_column": "PayslipID", "via_related": "PayslipID", "description": "A payslip is composed of multiple detailed items (earnings, deductions, taxes)"}
    ],
    "common_queries": [
        "SELECT * FROM Payslips WHERE RunID = ?;",
        "SELECT p.*, u.FullName FROM Payslips p JOIN EmployeesPayrollInfo epi ON p.EmployeeInfoID = epi.EmployeeInfoID JOIN Users u ON epi.UserID = u.UserID WHERE p.RunID = ?;",
        "SELECT * FROM Payslips WHERE EmployeeInfoID = ? ORDER BY PayslipID DESC LIMIT 1;"
    ]
}

PAYSLIP_ITEMS={
    "table_name": "PayslipItems",
    "description": "Detailed breakdown of earnings, deductions, taxes, and contributions on a payslip",
    "purpose": "Provides line-item detail for each payslip",
    "columns": [
        {"name": "PayslipItemID", "type": "INTEGER", "description": "Primary key identifier", "is_primary": true, "is_foreign": false, "is_required": true},
        {"name": "PayslipID", "type": "INTEGER", "description": "FK to the Payslips table", "is_primary": false, "is_foreign": true, "references": "Payslips.PayslipID", "is_required": true},
        {"name": "ItemType", "type": "TEXT", "description": "Type of item (e.g., Earning-Regular, Earning-Overtime, Deduction-Tax, Deduction-Benefit, Contribution-Employer)", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "DeductionTypeID", "type": "INTEGER", "description": "FK to PayrollDeductionTypes (if ItemType is Deduction or Contribution)", "is_primary": false, "is_foreign": true, "references": "PayrollDeductionTypes.DeductionTypeID", "is_required": false},
        {"name": "Description", "type": "TEXT", "description": "Description of the item (e.g., Regular Hours, Federal Income Tax)", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "Hours", "type": "REAL", "description": "Number of hours related to this item (if applicable)", "is_primary": false, "is_foreign": false, "is_required": false},
        {"name": "Rate", "type": "REAL", "description": "Rate used for calculation (if applicable)", "is_primary": false, "is_foreign": false, "is_required": false},
        {"name": "Amount", "type": "REAL", "description": "Calculated amount for this line item (positive for earnings/contributions, negative for deductions/taxes)", "is_primary": false, "is_foreign": false, "is_required": true}
    ],
    "relationships": [
        {"related_table": "Payslips", "type": "many_to_one", "via_column": "PayslipID", "description": "Each item belongs to exactly one payslip"},
        {"related_table": "PayrollDeductionTypes", "type": "many_to_one", "via_column": "DeductionTypeID", "description": "Links deduction/contribution items to their type definition"}
    ],
    "common_queries": [
        "SELECT * FROM PayslipItems WHERE PayslipID = ? ORDER BY ItemType;",
        "SELECT ItemType, SUM(Amount) FROM PayslipItems WHERE PayslipID = ? GROUP BY ItemType;",
        "SELECT pi.*, pdt.DeductionName FROM PayslipItems pi LEFT JOIN PayrollDeductionTypes pdt ON pi.DeductionTypeID = pdt.DeductionTypeID WHERE pi.PayslipID = ?;"
    ]
}

# --- Other Modules ---
RECURRING_TRANSACTIONS={
    "table_name": "RecurringTransactions",
    "description": "Regular financial transactions that occur at defined intervals",
    "purpose": "Automation of regular financial activities (like recurring bills/invoices) and cash flow planning",
    "columns": [
        {"name": "RecurringID", "type": "INTEGER", "description": "Primary key identifier for each recurring transaction template", "is_primary": true, "is_foreign": false, "is_required": true},
        {"name": "TemplateName", "type": "TEXT", "description": "User-defined name for this recurring template", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "TransactionType", "type": "TEXT", "description": "Type of transaction to generate (e.g., Bill, Invoice, Journal Entry, Cash Disbursement)", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "AccountID", "type": "INTEGER", "description": "Primary related account (e.g., Expense for a bill, Revenue for an invoice, source account for transfer)", "is_primary": false, "is_foreign": true, "references": "ChartOfAccounts.AccountID", "is_required": true},
        {"name": "RelatedPartyID", "type": "INTEGER", "description": "FK to Customers or Vendors table, depending on TransactionType (optional)", "is_primary": false, "is_foreign": false, "is_required": false}, # Polymorphic: could reference Customers.CustomerID or Vendors.VendorID
        {"name": "Amount", "type": "REAL", "description": "Amount of the recurring transaction", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "Frequency", "type": "TEXT", "description": "How often transaction recurs (e.g., Daily, Weekly, Monthly, Quarterly, Annually)", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "Interval", "type": "INTEGER", "description": "Interval for the frequency (e.g., 1 for Monthly, 2 for Bi-Monthly)", "is_primary": false, "is_foreign": false, "is_required": true, "default_value": 1},
        {"name": "StartDate", "type": "TEXT", "description": "Date when recurrence begins in ISO format", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "EndDate", "type": "TEXT", "description": "Optional end date for the recurrence in ISO format", "is_primary": false, "is_foreign": false, "is_required": false},
        {"name": "NextDueDate", "type": "TEXT", "description": "Calculated date the next transaction should be generated", "is_primary": false, "is_foreign": false, "is_required": false},
        {"name": "Status", "type": "TEXT", "description": "Status (e.g., Active, Paused, Expired)", "is_primary": false, "is_foreign": false, "is_required": true, "default_value": "Active"},
        {"name": "CreatedBy", "type": "INTEGER", "description": "Foreign key to Users table", "is_primary": false, "is_foreign": true, "references": "Users.UserID", "is_required": true}
        // Additional fields might be needed depending on TransactionType (e.g., description template, line items template)
    ],
    "relationships": [
        {"related_table": "ChartOfAccounts", "type": "many_to_one", "via_column": "AccountID", "description": "Each recurring transaction is associated with exactly one primary account"},
        {"related_table": "Users", "type": "many_to_one", "via_column": "CreatedBy", "description": "Each recurring transaction is created by exactly one user"}
        // Note: Polymorphic link via RelatedPartyID/TransactionType to Customers/Vendors
    ],
    "common_queries": [
        "SELECT * FROM RecurringTransactions WHERE Status = 'Active' AND (EndDate IS NULL OR EndDate > date('now'));",
        "SELECT rt.*, coa.AccountName FROM RecurringTransactions rt JOIN ChartOfAccounts coa ON rt.AccountID = coa.AccountID WHERE rt.Frequency = 'Monthly' AND rt.Status = 'Active';",
        "SELECT SUM(Amount) AS TotalRecurringOutflow FROM RecurringTransactions WHERE TransactionType IN ('Bill', 'Cash Disbursement', 'Journal Entry') AND AccountID IN (SELECT AccountID FROM ChartOfAccounts WHERE AccountType = 'Expense' OR AccountType = 'Asset') AND Status = 'Active' AND (EndDate IS NULL OR EndDate > date('now'));"
    ]
}

DOCUMENTS={
    "table_name": "Documents",
    "description": "Stores references to financial and business documents",
    "purpose": "Document management and retrieval for financial transactions and entities",
    "columns": [
        {"name": "DocumentID", "type": "INTEGER", "description": "Primary key identifier for each document", "is_primary": true, "is_foreign": false, "is_required": true},
        {"name": "EntityType", "type": "TEXT", "description": "Type of entity the document relates to (e.g., Invoice, Bill, Asset, ExpenseReport, Vendor, Customer)", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "EntityID", "type": "INTEGER", "description": "ID of the related entity record", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "FileName", "type": "TEXT", "description": "Original filename of the document", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "FilePath", "type": "TEXT", "description": "Path or URL to access the stored document", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "FileType", "type": "TEXT", "description": "MIME type of the file (e.g., application/pdf, image/jpeg)", "is_primary": false, "is_foreign": false, "is_required": false},
        {"name": "FileSize", "type": "INTEGER", "description": "Size of the file in bytes", "is_primary": false, "is_foreign": false, "is_required": false},
        {"name": "Description", "type": "TEXT", "description": "Optional description of the document content", "is_primary": false, "is_foreign": false, "is_required": false},
        {"name": "UploadDate", "type": "TEXT", "description": "Date when document was uploaded in ISO format", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "UploadedBy", "type": "INTEGER", "description": "Foreign key to Users table", "is_primary": false, "is_foreign": true, "references": "Users.UserID", "is_required": true}
    ],
    "relationships": [
        {"related_table": "Users", "type": "many_to_one", "via_column": "UploadedBy", "description": "Each document is uploaded by exactly one user"},
        {"related_table": "ExpenseItems", "type": "one_to_many", "via_column": "DocumentID", "via_related": "ReceiptDocumentID", "description": "Documents can be attached as receipts to expense items"}
        // Note: Polymorphic link via EntityID/EntityType to various tables
    ],
    "common_queries": [
        "SELECT * FROM Documents WHERE EntityType = 'Invoice' AND EntityID = ?;",
        "SELECT d.*, u.Username FROM Documents d JOIN Users u ON d.UploadedBy = u.UserID WHERE d.UploadDate >= date('now', '-30 days');",
        "SELECT EntityType, COUNT(*) AS DocCount FROM Documents GROUP BY EntityType ORDER BY DocCount DESC;"
    ]
}

TAGS={
    "table_name": "Tags",
    "description": "Defines categories or dimensions for multi-dimensional financial analysis",
    "purpose": "Flexible categorization of transactions beyond standard chart of accounts (e.g., by project, location, campaign)",
    "columns": [
        {"name": "TagID", "type": "INTEGER", "description": "Primary key identifier for each tag", "is_primary": true, "is_foreign": false, "is_required": true},
        {"name": "TagName", "type": "TEXT", "description": "Name of the tag", "is_primary": false, "is_foreign": false, "is_required": true, "is_unique": true},
        {"name": "Description", "type": "TEXT", "description": "Detailed description of the tag's purpose", "is_primary": false, "is_foreign": false, "is_required": false}
    ],
    "relationships": [
         {"related_table": "TransactionTags", "type": "one_to_many", "via_column": "TagID", "via_related": "TagID", "description": "Tags can be applied to multiple transactions via TransactionTags"}
    ],
    "common_queries": [
        "SELECT * FROM Tags ORDER BY TagName;",
        "SELECT t.TagName, COUNT(tt.TransactionTagID) AS UsageCount FROM Tags t LEFT JOIN TransactionTags tt ON t.TagID = tt.TagID GROUP BY t.TagID ORDER BY UsageCount DESC;",
        "SELECT t.TagName FROM Tags t WHERE t.TagID NOT IN (SELECT DISTINCT TagID FROM TransactionTags);"
    ]
}

TRANSACTION_TAGS={
    "table_name": "TransactionTags",
    "description": "Links general ledger entry lines to tags for advanced reporting",
    "purpose": "Enables multi-dimensional analysis of financial data (associating specific GL lines with tags)",
    "columns": [
        {"name": "TransactionTagID", "type": "INTEGER", "description": "Primary key identifier for each tag assignment", "is_primary": true, "is_foreign": false, "is_required": true},
        {"name": "TransactionID", "type": "INTEGER", "description": "Foreign key to GeneralLedger table (EntryID)", "is_primary": false, "is_foreign": true, "references": "GeneralLedger.EntryID", "is_required": true},
        {"name": "TagID", "type": "INTEGER", "description": "Foreign key to Tags table", "is_primary": false, "is_foreign": true, "references": "Tags.TagID", "is_required": true}
    ],
     "indexes": [
        {"name": "idx_transactiontags_transaction_tag", "columns": ["TransactionID", "TagID"], "is_unique": true}
    ],
    "relationships": [
        {"related_table": "GeneralLedger", "type": "many_to_one", "via_column": "TransactionID", "description": "Each tag assignment is associated with exactly one general ledger entry line"},
        {"related_table": "Tags", "type": "many_to_one", "via_column": "TagID", "description": "Each tag assignment references exactly one tag"}
    ],
    "common_queries": [
        "SELECT t.TagName, gl.Description, gl.DebitAmount, gl.CreditAmount FROM TransactionTags tt JOIN Tags t ON tt.TagID = t.TagID JOIN GeneralLedger gl ON tt.TransactionID = gl.EntryID WHERE tt.TagID = ?;",
        "SELECT t.TagName, SUM(gl.DebitAmount) AS TotalDebits, SUM(gl.CreditAmount) AS TotalCredits FROM TransactionTags tt JOIN Tags t ON tt.TagID = t.TagID JOIN GeneralLedger gl ON tt.TransactionID = gl.EntryID GROUP BY t.TagID;",
        "SELECT gl.EntryID, gl.Description FROM GeneralLedger gl WHERE gl.EntryID NOT IN (SELECT TransactionID FROM TransactionTags);"
    ]
}

EXPENSE_REPORTS={
    "table_name": "ExpenseReports",
    "description": "Employee expense report submissions for reimbursement",
    "purpose": "Processing and tracking employee expense reimbursements",
    "columns": [
        {"name": "ReportID", "type": "INTEGER", "description": "Primary key identifier for each expense report", "is_primary": true, "is_foreign": false, "is_required": true},
        {"name": "ReportNumber", "type": "TEXT", "description": "User-friendly report number (e.g., EXP-2024-001)", "is_primary": false, "is_foreign": false, "is_required": false, "is_unique": true},
        {"name": "EmployeeID", "type": "INTEGER", "description": "Foreign key to Users table (employee submitting)", "is_primary": false, "is_foreign": true, "references": "Users.UserID", "is_required": true},
        {"name": "SubmissionDate", "type": "TEXT", "description": "Date when report was submitted in ISO format", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "ReportPeriodStart", "type": "TEXT", "description": "Start date of the period covered by the report (optional)", "is_primary": false, "is_foreign": false, "is_required": false},
        {"name": "ReportPeriodEnd", "type": "TEXT", "description": "End date of the period covered by the report (optional)", "is_primary": false, "is_foreign": false, "is_required": false},
        {"name": "TotalAmount", "type": "REAL", "description": "Total amount of all expenses in the report (calculated from items)", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "Status", "type": "TEXT", "description": "Status of the report (e.g., Draft, Submitted, Approved, Paid, Rejected)", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "ApprovedBy", "type": "INTEGER", "description": "Foreign key to Users table for approver (optional, might use ApprovalWorkflow)", "is_primary": false, "is_foreign": true, "references": "Users.UserID", "is_required": false},
        {"name": "ApprovalDate", "type": "TEXT", "description": "Date the report was approved in ISO format", "is_primary": false, "is_foreign": false, "is_required": false},
        {"name": "PaidDate", "type": "TEXT", "description": "Date the reimbursement was paid in ISO format", "is_primary": false, "is_foreign": false, "is_required": false},
        {"name": "PaymentReference", "type": "TEXT", "description": "Reference for the reimbursement payment (e.g., check number, transaction ID)", "is_primary": false, "is_foreign": false, "is_required": false},
        {"name": "Notes", "type": "TEXT", "description": "Additional notes or comments about the report", "is_primary": false, "is_foreign": false, "is_required": false}
    ],
    "relationships": [
        {"related_table": "Users", "type": "many_to_one", "via_column": "EmployeeID", "description": "Each expense report is submitted by exactly one employee (user)"},
        {"related_table": "Users", "type": "many_to_one", "via_column": "ApprovedBy", "description": "Each expense report may be approved by one user (simplified; full workflow preferred)"},
        {"related_table": "ExpenseItems", "type": "one_to_many", "via_column": "ReportID", "via_related": "ReportID", "description": "Expense reports contain multiple expense items"}
    ],
    "common_queries": [
        "SELECT er.*, u.FullName AS EmployeeName FROM ExpenseReports er JOIN Users u ON er.EmployeeID = u.UserID WHERE er.Status = 'Submitted';",
        "SELECT u.FullName, SUM(er.TotalAmount) AS TotalExpenses FROM ExpenseReports er JOIN Users u ON er.EmployeeID = u.UserID WHERE er.Status = 'Approved' AND er.SubmissionDate >= date('now', '-30 days') GROUP BY er.EmployeeID;",
        "SELECT er.*, (SELECT COUNT(*) FROM ExpenseItems WHERE ReportID = er.ReportID) AS ItemCount FROM ExpenseReports er WHERE er.Status = 'Submitted';"
    ]
}

EXPENSE_ITEMS={
    "table_name": "ExpenseItems",
    "description": "Individual expense line items within an expense report",
    "purpose": "Detailed tracking of expenses within expense reports",
    "columns": [
        {"name": "ItemID", "type": "INTEGER", "description": "Primary key identifier for each expense item", "is_primary": true, "is_foreign": false, "is_required": true},
        {"name": "ReportID", "type": "INTEGER", "description": "Foreign key to ExpenseReports table", "is_primary": false, "is_foreign": true, "references": "ExpenseReports.ReportID", "is_required": true},
        {"name": "ExpenseDate", "type": "TEXT", "description": "Date the expense was incurred in ISO format", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "Description", "type": "TEXT", "description": "Description of the expense", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "Amount", "type": "REAL", "description": "Amount of the individual expense", "is_primary": false, "is_foreign": false, "is_required": true},
        {"name": "AccountID", "type": "INTEGER", "description": "Foreign key to ChartOfAccounts table (relevant expense account)", "is_primary": false, "is_foreign": true, "references": "ChartOfAccounts.AccountID", "is_required": true},
        {"name": "ReceiptDocumentID", "type": "INTEGER", "description": "Foreign key to Documents table for attached receipt", "is_primary": false, "is_foreign": true, "references": "Documents.DocumentID", "is_required": false}
    ],
    "relationships": [
        {"related_table": "ExpenseReports", "type": "many_to_one", "via_column": "ReportID", "description": "Each expense item belongs to exactly one expense report"},
        {"related_table": "ChartOfAccounts", "type": "many_to_one", "via_column": "AccountID", "description": "Each expense item is associated with exactly one expense account"},
        {"related_table": "Documents", "type": "many_to_one", "via_column": "ReceiptDocumentID", "description": "Each expense item may have one attached receipt document"}
    ],
    "common_queries": [
        "SELECT ei.*, er.Status FROM ExpenseItems ei JOIN ExpenseReports er ON ei.ReportID = er.ReportID WHERE ei.Amount > 100;",
        "SELECT ei.Description, ei.Amount, coa.AccountName FROM ExpenseItems ei JOIN ChartOfAccounts coa ON ei.AccountID = coa.AccountID WHERE ei.ReportID = ?;",
        "SELECT ei.*, d.FileName FROM ExpenseItems ei LEFT JOIN Documents d ON ei.ReceiptDocumentID = d.DocumentID WHERE ei.ReportID = ?;"
    ]
}


###################

INTENT_DOMAINS={
    "accounting_core": {
        "name": "Accounting Core",
        "description": "Core accounting system components including account structure, fiscal periods, and transaction recording",
        "tables": ["AccountCategories", "ChartOfAccounts", "FiscalYears", "FiscalPeriods", "GeneralLedger"],
        "purpose": "Maintain the core accounting framework including account hierarchy, fiscal calendar, and transaction journal entries"
    },
    "organization": {
        "name": "Organization",
        "description": "Company organizational hierarchy, job positions, and user access management",
        "tables": ["Departments", "Positions", "Users"],
        "purpose": "Define and manage company structure, job roles, and system user accounts with appropriate access levels"
    },
    "cash_management": {
        "name": "Cash Management",
        "description": "Banking operations and cash transaction tracking",
        "tables": ["BankAccounts", "CashTransactions"],
        "purpose": "Track and manage company bank accounts and cash flow"
    },
    "accounts_receivable": {
        "name": "Accounts Receivable",
        "description": "Customer billing, payment collection, and credit management",
        "tables": ["Customers", "Invoices", "InvoiceItems", "CustomerPayments", "InvoicePaymentAllocations", "CreditNotes"],
        "purpose": "Process customer billing & invoices, track customer payments and allocations, manage credits, and monitor accounts receivable balances"
    },
    "accounts_payable": {
        "name": "Accounts Payable",
        "description": "Vendor bill processing, payment management, and debit management",
        "tables": ["Vendors", "Bills", "BillItems", "VendorPayments", "BillPaymentAllocations", "DebitNotes"],
        "purpose": "Manage vendor relationships, process bills, manage payments and allocations, handle debits, and monitor accounts payable balances"
    },
    "tax_management": {
        "name": "Tax Management",
        "description": "Tax rate configuration and tax return filing",
        "tables": ["TaxRates", "TaxReturns"],
        "purpose": "Configure tax rates and track tax return filings for compliance"
    },
    "budgeting": {
        "name": "Budgeting",
        "description": "Financial planning and budget allocation",
        "tables": ["Budgets", "BudgetItems"],
        "purpose": "Create, track, and analyze financial budgets with detailed allocation"
    },
    "financial_reporting": {
        "name": "Financial Reporting",
        "description": "Generation and storage of financial reports",
        "tables": ["FinancialReports"],
        "purpose": "Generate and store financial statements and reports for analysis"
    },
    "approval_management": {
        "name": "Approval Management",
        "description": "Workflow configuration for transaction approvals",
        "tables": ["ApprovalWorkflows", "ApprovalSteps"],
        "purpose": "Configure and manage approval processes for financial transactions"
    },
    "audit_compliance": {
        "name": "Audit & Compliance",
        "description": "System activity logging for audit purposes",
        "tables": ["AuditLogs"],
        "purpose": "Track system activities for compliance, security, and change management"
    },
    "asset_management": {
        "name": "Asset Management",
        "description": "Fixed asset tracking and depreciation",
        "tables": ["FixedAssets"],
        "purpose": "Track fixed assets, manage depreciation schedules, and record disposals"
    },
    "product_service_management": {
        "name": "Product & Service Management",
        "description": "Company product and service catalog",
        "tables": ["Products"],
        "purpose": "Maintain a catalog of products and services offered by the company for invoicing"
    },
    "inventory_management": {
        "name": "Inventory Management",
        "description": "Tracking of physical goods, stock levels, movements, and cost of goods sold",
        "tables": ["Warehouses", "InventoryItems", "StockMovements", "CostOfGoodsSoldLog"],
        "purpose": "Manage inventory quantities, values, locations, movements, and calculate/track Cost of Goods Sold"
    },
    "payroll_management": {
        "name": "Payroll Management",
        "description": "Processing employee salaries, deductions, and payroll taxes",
        "tables": ["EmployeesPayrollInfo", "PayrollDeductionTypes", "EmployeeDeductions", "PayrollRuns", "Payslips", "PayslipItems"],
        "purpose": "Manage employee payroll setup, process payroll runs, calculate pay/deductions, and facilitate GL posting"
    },
    "recurring_transactions": {
        "name": "Recurring Transactions",
        "description": "Management of regularly scheduled financial activities",
        "tables": ["RecurringTransactions"],
        "purpose": "Configure and manage templates for transactions that occur on a regular schedule"
    },
    "document_management": {
        "name": "Document Management",
        "description": "Storage and organization of financial documents",
        "tables": ["Documents"],
        "purpose": "Store references to physical or digital documents related to financial activities"
    },
    "multi_dimensional_reporting": {
        "name": "Multi-dimensional Reporting",
        "description": "Tag-based transaction categorization for flexible reporting",
        "tables": ["Tags", "TransactionTags"],
        "purpose": "Enable multi-dimensional analysis of financial data through tagging general ledger entries"
    },
    "expense_management": {
        "name": "Expense Management",
        "description": "Employee expense reporting and reimbursement tracking",
        "tables": ["ExpenseReports", "ExpenseItems"],
        "purpose": "Process employee expense reports and manage reimbursements"
    }
}